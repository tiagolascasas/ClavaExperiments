-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kNN_PredictAll_kNN_Predict_4_Pipeline_VITIS_LOOP_236_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    histogram_q0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    histogram_q0_ce0 : OUT STD_LOGIC;
    histogram_q0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    histogram_q1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    histogram_q1_ce0 : OUT STD_LOGIC;
    histogram_q1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    histogram_q2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    histogram_q2_ce0 : OUT STD_LOGIC;
    histogram_q2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    histogram_q3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    histogram_q3_ce0 : OUT STD_LOGIC;
    histogram_q3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    mostPopular_q3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    mostPopular_q3_out_ap_vld : OUT STD_LOGIC;
    mostPopular_q2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    mostPopular_q2_out_ap_vld : OUT STD_LOGIC;
    mostPopular_q1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    mostPopular_q1_out_ap_vld : OUT STD_LOGIC;
    mostPopular_q0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    mostPopular_q0_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of kNN_PredictAll_kNN_Predict_4_Pipeline_VITIS_LOOP_236_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln236_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal i_1_reg_489 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln236_fu_222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mostPopular_q0_fu_46 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopular_q0_1_fu_272_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal mostPopular_q1_fu_50 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopular_q1_2_fu_298_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopular_q2_fu_54 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopular_q2_1_fu_324_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopular_q3_fu_58 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopular_q3_4_fu_350_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mostPopularCount_q0_fu_62 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q0_1_fu_280_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q1_fu_66 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q1_2_fu_306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q2_fu_70 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q2_1_fu_332_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q3_fu_74 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopularCount_q3_2_fu_358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mostPopular_q3_1_fu_78 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_fu_216_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal sext_ln239_fu_259_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln239_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln242_fu_269_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln244_fu_288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln244_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln249_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln249_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln254_fu_340_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln254_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kNN_PredictAll_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component kNN_PredictAll_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    mostPopularCount_q0_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopularCount_q0_fu_62 <= ap_const_lv32_FFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopularCount_q0_fu_62 <= mostPopularCount_q0_1_fu_280_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopularCount_q1_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopularCount_q1_fu_66 <= ap_const_lv32_FFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopularCount_q1_fu_66 <= mostPopularCount_q1_2_fu_306_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopularCount_q2_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopularCount_q2_fu_70 <= ap_const_lv32_FFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopularCount_q2_fu_70 <= mostPopularCount_q2_1_fu_332_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopularCount_q3_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopularCount_q3_fu_74 <= ap_const_lv32_FFFFFFFF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopularCount_q3_fu_74 <= mostPopularCount_q3_2_fu_358_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopular_q0_fu_46_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopular_q0_fu_46 <= ap_const_lv8_FF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopular_q0_fu_46 <= mostPopular_q0_1_fu_272_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopular_q1_fu_50_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopular_q1_fu_50 <= ap_const_lv8_FF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopular_q1_fu_50 <= mostPopular_q1_2_fu_298_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopular_q2_fu_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopular_q2_fu_54 <= ap_const_lv8_FF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopular_q2_fu_54 <= mostPopular_q2_1_fu_324_p3;
                end if;
            end if; 
        end if;
    end process;

    mostPopular_q3_1_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln236_fu_210_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    mostPopular_q3_1_fu_78 <= i_fu_216_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopular_q3_1_fu_78 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    mostPopular_q3_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    mostPopular_q3_fu_58 <= ap_const_lv8_FF;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    mostPopular_q3_fu_58 <= mostPopular_q3_4_fu_350_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_489 <= ap_sig_allocacmp_i_1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln236_fu_210_p2)
    begin
        if (((icmp_ln236_fu_210_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, mostPopular_q3_1_fu_78)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_1 <= mostPopular_q3_1_fu_78;
        end if; 
    end process;

    histogram_q0_address0 <= zext_ln236_fu_222_p1(3 - 1 downto 0);

    histogram_q0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            histogram_q0_ce0 <= ap_const_logic_1;
        else 
            histogram_q0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    histogram_q1_address0 <= zext_ln236_fu_222_p1(3 - 1 downto 0);

    histogram_q1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            histogram_q1_ce0 <= ap_const_logic_1;
        else 
            histogram_q1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    histogram_q2_address0 <= zext_ln236_fu_222_p1(3 - 1 downto 0);

    histogram_q2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            histogram_q2_ce0 <= ap_const_logic_1;
        else 
            histogram_q2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    histogram_q3_address0 <= zext_ln236_fu_222_p1(3 - 1 downto 0);

    histogram_q3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            histogram_q3_ce0 <= ap_const_logic_1;
        else 
            histogram_q3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_216_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv3_1));
    icmp_ln236_fu_210_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv3_6) else "0";
    icmp_ln239_fu_263_p2 <= "1" when (signed(mostPopularCount_q0_fu_62) < signed(sext_ln239_fu_259_p1)) else "0";
    icmp_ln244_fu_292_p2 <= "1" when (signed(mostPopularCount_q1_fu_66) < signed(sext_ln244_fu_288_p1)) else "0";
    icmp_ln249_fu_318_p2 <= "1" when (signed(mostPopularCount_q2_fu_70) < signed(sext_ln249_fu_314_p1)) else "0";
    icmp_ln254_fu_344_p2 <= "1" when (signed(mostPopularCount_q3_fu_74) < signed(sext_ln254_fu_340_p1)) else "0";
    mostPopularCount_q0_1_fu_280_p3 <= 
        sext_ln239_fu_259_p1 when (icmp_ln239_fu_263_p2(0) = '1') else 
        mostPopularCount_q0_fu_62;
    mostPopularCount_q1_2_fu_306_p3 <= 
        sext_ln244_fu_288_p1 when (icmp_ln244_fu_292_p2(0) = '1') else 
        mostPopularCount_q1_fu_66;
    mostPopularCount_q2_1_fu_332_p3 <= 
        sext_ln249_fu_314_p1 when (icmp_ln249_fu_318_p2(0) = '1') else 
        mostPopularCount_q2_fu_70;
    mostPopularCount_q3_2_fu_358_p3 <= 
        sext_ln254_fu_340_p1 when (icmp_ln254_fu_344_p2(0) = '1') else 
        mostPopularCount_q3_fu_74;
    mostPopular_q0_1_fu_272_p3 <= 
        zext_ln242_fu_269_p1 when (icmp_ln239_fu_263_p2(0) = '1') else 
        mostPopular_q0_fu_46;
    mostPopular_q0_out <= mostPopular_q0_fu_46;

    mostPopular_q0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln236_fu_210_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln236_fu_210_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mostPopular_q0_out_ap_vld <= ap_const_logic_1;
        else 
            mostPopular_q0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mostPopular_q1_2_fu_298_p3 <= 
        zext_ln242_fu_269_p1 when (icmp_ln244_fu_292_p2(0) = '1') else 
        mostPopular_q1_fu_50;
    mostPopular_q1_out <= mostPopular_q1_fu_50;

    mostPopular_q1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln236_fu_210_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln236_fu_210_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mostPopular_q1_out_ap_vld <= ap_const_logic_1;
        else 
            mostPopular_q1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mostPopular_q2_1_fu_324_p3 <= 
        zext_ln242_fu_269_p1 when (icmp_ln249_fu_318_p2(0) = '1') else 
        mostPopular_q2_fu_54;
    mostPopular_q2_out <= mostPopular_q2_fu_54;

    mostPopular_q2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln236_fu_210_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln236_fu_210_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mostPopular_q2_out_ap_vld <= ap_const_logic_1;
        else 
            mostPopular_q2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mostPopular_q3_4_fu_350_p3 <= 
        zext_ln242_fu_269_p1 when (icmp_ln254_fu_344_p2(0) = '1') else 
        mostPopular_q3_fu_58;
    mostPopular_q3_out <= mostPopular_q3_fu_58;

    mostPopular_q3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln236_fu_210_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln236_fu_210_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mostPopular_q3_out_ap_vld <= ap_const_logic_1;
        else 
            mostPopular_q3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln239_fu_259_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(histogram_q0_q0),32));

        sext_ln244_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(histogram_q1_q0),32));

        sext_ln249_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(histogram_q2_q0),32));

        sext_ln254_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(histogram_q3_q0),32));

    zext_ln236_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_1),64));
    zext_ln242_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_489),8));
end behav;
