-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kNN_PredictAll_kNN_Predict_4_Pipeline_VITIS_LOOP_121_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mul_ln136 : IN STD_LOGIC_VECTOR (15 downto 0);
    training_X_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_X_0_ce0 : OUT STD_LOGIC;
    training_X_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    training_X_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_X_1_ce0 : OUT STD_LOGIC;
    training_X_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    training_X_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_X_2_ce0 : OUT STD_LOGIC;
    training_X_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    training_X_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_X_3_ce0 : OUT STD_LOGIC;
    training_X_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    mul_ln61 : IN STD_LOGIC_VECTOR (15 downto 0);
    testing_X_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    testing_X_ce0 : OUT STD_LOGIC;
    testing_X_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    testing_X_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    testing_X_ce1 : OUT STD_LOGIC;
    testing_X_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    mul_ln62 : IN STD_LOGIC_VECTOR (15 downto 0);
    mul_ln63 : IN STD_LOGIC_VECTOR (15 downto 0);
    mul_ln64 : IN STD_LOGIC_VECTOR (15 downto 0);
    distance_q3_t3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q3_t3_out_ap_vld : OUT STD_LOGIC;
    distance_q3_t2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q3_t2_out_ap_vld : OUT STD_LOGIC;
    distance_q3_t1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q3_t1_out_ap_vld : OUT STD_LOGIC;
    distance_q3_t0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q3_t0_out_ap_vld : OUT STD_LOGIC;
    distance_q2_t3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q2_t3_out_ap_vld : OUT STD_LOGIC;
    distance_q0_t0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q0_t0_out_ap_vld : OUT STD_LOGIC;
    distance_q0_t1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q0_t1_out_ap_vld : OUT STD_LOGIC;
    distance_q0_t2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q0_t2_out_ap_vld : OUT STD_LOGIC;
    distance_q0_t3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q0_t3_out_ap_vld : OUT STD_LOGIC;
    distance_q1_t0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q1_t0_out_ap_vld : OUT STD_LOGIC;
    distance_q1_t1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q1_t1_out_ap_vld : OUT STD_LOGIC;
    distance_q1_t2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q1_t2_out_ap_vld : OUT STD_LOGIC;
    distance_q1_t3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q1_t3_out_ap_vld : OUT STD_LOGIC;
    distance_q2_t0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q2_t0_out_ap_vld : OUT STD_LOGIC;
    distance_q2_t1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q2_t1_out_ap_vld : OUT STD_LOGIC;
    distance_q2_t2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    distance_q2_t2_out_ap_vld : OUT STD_LOGIC;
    grp_fu_55918_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55918_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55918_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_55918_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55918_p_ce : OUT STD_LOGIC;
    grp_fu_55922_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55922_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55922_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_55922_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55922_p_ce : OUT STD_LOGIC;
    grp_fu_55926_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55926_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55926_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_55926_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55926_p_ce : OUT STD_LOGIC;
    grp_fu_56117_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_56117_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_56117_p_ce : OUT STD_LOGIC );
end;


architecture behav of kNN_PredictAll_kNN_Predict_4_Pipeline_VITIS_LOOP_121_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln121_reg_1039 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_481 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln121_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1039_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1039_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1039_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln136_fu_591_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln136_reg_1043 : STD_LOGIC_VECTOR (15 downto 0);
    signal q0_feat_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal q0_feat_reg_1089 : STD_LOGIC_VECTOR (31 downto 0);
    signal q1_feat_fu_658_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal q1_feat_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal t0_feat_fu_662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t0_feat_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_feat_fu_666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_feat_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_feat_fu_670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_feat_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_feat_fu_674_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t3_feat_reg_1122 : STD_LOGIC_VECTOR (31 downto 0);
    signal q2_feat_fu_678_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal q2_feat_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal q3_feat_fu_682_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal q3_feat_reg_1135 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_q0_t0_reg_1141 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q1_t1_reg_1147 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q0_t1_reg_1153 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q1_t2_reg_1159 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q2_t2_reg_1165 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q3_t3_reg_1171 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q2_t3_reg_1177 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q3_t0_reg_1183 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q0_t2_reg_1189 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q1_t3_reg_1195 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q2_t0_reg_1201 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q3_t1_reg_1207 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q0_t3_reg_1213 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q1_t0_reg_1219 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q2_t1_reg_1225 : STD_LOGIC_VECTOR (63 downto 0);
    signal diff_q3_t2_reg_1231 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_435_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_1237 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_439_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul1_reg_1242 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_443_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul4_reg_1247 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul5_reg_1252 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul2_reg_1277 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul3_reg_1282 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul6_reg_1287 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul7_reg_1292 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_reg_1317 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul9_reg_1322 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul10_reg_1327 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul11_reg_1332 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul12_reg_1357 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul13_reg_1362 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul14_reg_1367 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul15_reg_1372 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln136_1_fu_601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln124_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln125_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln126_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln127_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q2_t2_fu_88 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_419_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q2_t2_load : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal distance_q2_t1_fu_92 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_427_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q2_t1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q2_t0_fu_96 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q2_t0_load : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal distance_q1_t3_fu_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_423_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q1_t3_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q1_t2_fu_104 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_431_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q1_t2_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q1_t1_fu_108 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q1_t1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q1_t0_fu_112 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q1_t0_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q0_t3_fu_116 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q0_t3_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q0_t2_fu_120 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q0_t2_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q0_t1_fu_124 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q0_t1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q0_t0_fu_128 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q0_t0_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q2_t3_fu_132 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q2_t3_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q3_t0_fu_136 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q3_t0_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q3_t1_fu_140 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q3_t1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q3_t2_fu_144 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q3_t2_load : STD_LOGIC_VECTOR (63 downto 0);
    signal distance_q3_t3_fu_148 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_distance_q3_t3_load : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_152 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln121_fu_585_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_391_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_395_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_399_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_403_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_407_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_410_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_413_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_416_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_423_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_427_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_431_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_435_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_439_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_443_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_447_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln136_fu_595_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln124_fu_609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln125_fu_620_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln126_fu_636_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln127_fu_645_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter4_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0_1to5 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component kNN_PredictAll_fsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kNN_PredictAll_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kNN_PredictAll_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kNN_PredictAll_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kNN_PredictAll_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fsub_32ns_32ns_32_4_full_dsp_1_U7 : component kNN_PredictAll_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_403_p0,
        din1 => grp_fu_403_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_403_p2);

    fpext_32ns_64_2_no_dsp_1_U9 : component kNN_PredictAll_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_410_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_410_p1);

    fpext_32ns_64_2_no_dsp_1_U10 : component kNN_PredictAll_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_413_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_413_p1);

    fpext_32ns_64_2_no_dsp_1_U11 : component kNN_PredictAll_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_416_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_416_p1);

    dadd_64ns_64ns_64_5_full_dsp_1_U12 : component kNN_PredictAll_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_419_p0,
        din1 => grp_fu_419_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_419_p2);

    dadd_64ns_64ns_64_5_full_dsp_1_U13 : component kNN_PredictAll_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_423_p0,
        din1 => grp_fu_423_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_423_p2);

    dadd_64ns_64ns_64_5_full_dsp_1_U14 : component kNN_PredictAll_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_427_p0,
        din1 => grp_fu_427_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_427_p2);

    dadd_64ns_64ns_64_5_full_dsp_1_U15 : component kNN_PredictAll_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_431_p0,
        din1 => grp_fu_431_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_431_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U16 : component kNN_PredictAll_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_435_p0,
        din1 => grp_fu_435_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_435_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U17 : component kNN_PredictAll_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_439_p0,
        din1 => grp_fu_439_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_439_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U18 : component kNN_PredictAll_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_443_p0,
        din1 => grp_fu_443_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_443_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U19 : component kNN_PredictAll_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_447_p0,
        din1 => grp_fu_447_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_447_p2);

    flow_control_loop_pipe_sequential_init_U : component kNN_PredictAll_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    distance_q0_t0_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q0_t0_fu_128 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                distance_q0_t0_fu_128 <= grp_fu_419_p2;
            end if; 
        end if;
    end process;

    distance_q0_t1_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q0_t1_fu_124 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                distance_q0_t1_fu_124 <= grp_fu_427_p2;
            end if; 
        end if;
    end process;

    distance_q0_t2_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q0_t2_fu_120 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                distance_q0_t2_fu_120 <= grp_fu_419_p2;
            end if; 
        end if;
    end process;

    distance_q0_t3_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    distance_q0_t3_fu_116 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then 
                    distance_q0_t3_fu_116 <= grp_fu_419_p2;
                end if;
            end if; 
        end if;
    end process;

    distance_q1_t0_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    distance_q1_t0_fu_112 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then 
                    distance_q1_t0_fu_112 <= grp_fu_423_p2;
                end if;
            end if; 
        end if;
    end process;

    distance_q1_t1_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q1_t1_fu_108 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                distance_q1_t1_fu_108 <= grp_fu_423_p2;
            end if; 
        end if;
    end process;

    distance_q1_t2_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q1_t2_fu_104 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                distance_q1_t2_fu_104 <= grp_fu_431_p2;
            end if; 
        end if;
    end process;

    distance_q1_t3_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q1_t3_fu_100 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                distance_q1_t3_fu_100 <= grp_fu_423_p2;
            end if; 
        end if;
    end process;

    distance_q2_t0_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q2_t0_fu_96 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                distance_q2_t0_fu_96 <= grp_fu_427_p2;
            end if; 
        end if;
    end process;

    distance_q2_t1_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    distance_q2_t1_fu_92 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then 
                    distance_q2_t1_fu_92 <= grp_fu_427_p2;
                end if;
            end if; 
        end if;
    end process;

    distance_q2_t2_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q2_t2_fu_88 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                distance_q2_t2_fu_88 <= grp_fu_419_p2;
            end if; 
        end if;
    end process;

    distance_q2_t3_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q2_t3_fu_132 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                distance_q2_t3_fu_132 <= grp_fu_427_p2;
            end if; 
        end if;
    end process;

    distance_q3_t0_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q3_t0_fu_136 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                distance_q3_t0_fu_136 <= grp_fu_431_p2;
            end if; 
        end if;
    end process;

    distance_q3_t1_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q3_t1_fu_140 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                distance_q3_t1_fu_140 <= grp_fu_431_p2;
            end if; 
        end if;
    end process;

    distance_q3_t2_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    distance_q3_t2_fu_144 <= ap_const_lv64_0;
                elsif ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then 
                    distance_q3_t2_fu_144 <= grp_fu_431_p2;
                end if;
            end if; 
        end if;
    end process;

    distance_q3_t3_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                distance_q3_t3_fu_148 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                distance_q3_t3_fu_148 <= grp_fu_423_p2;
            end if; 
        end if;
    end process;

    j_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln121_fu_579_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_152 <= add_ln121_fu_585_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_152 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                diff_q0_t0_reg_1141 <= grp_fu_56117_p_dout0;
                diff_q0_t1_reg_1153 <= grp_fu_413_p1;
                diff_q1_t1_reg_1147 <= grp_fu_410_p1;
                diff_q1_t2_reg_1159 <= grp_fu_416_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                diff_q0_t2_reg_1189 <= grp_fu_56117_p_dout0;
                diff_q1_t3_reg_1195 <= grp_fu_410_p1;
                diff_q2_t0_reg_1201 <= grp_fu_413_p1;
                diff_q3_t1_reg_1207 <= grp_fu_416_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                diff_q0_t3_reg_1213 <= grp_fu_56117_p_dout0;
                diff_q1_t0_reg_1219 <= grp_fu_410_p1;
                diff_q2_t1_reg_1225 <= grp_fu_413_p1;
                diff_q3_t2_reg_1231 <= grp_fu_416_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                diff_q2_t2_reg_1165 <= grp_fu_56117_p_dout0;
                diff_q2_t3_reg_1177 <= grp_fu_413_p1;
                diff_q3_t0_reg_1183 <= grp_fu_416_p1;
                diff_q3_t3_reg_1171 <= grp_fu_410_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln121_reg_1039 <= icmp_ln121_fu_579_p2;
                icmp_ln121_reg_1039_pp0_iter1_reg <= icmp_ln121_reg_1039;
                icmp_ln121_reg_1039_pp0_iter2_reg <= icmp_ln121_reg_1039_pp0_iter1_reg;
                icmp_ln121_reg_1039_pp0_iter3_reg <= icmp_ln121_reg_1039_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul10_reg_1327 <= grp_fu_443_p2;
                mul11_reg_1332 <= grp_fu_447_p2;
                mul8_reg_1317 <= grp_fu_435_p2;
                mul9_reg_1322 <= grp_fu_439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul12_reg_1357 <= grp_fu_435_p2;
                mul13_reg_1362 <= grp_fu_439_p2;
                mul14_reg_1367 <= grp_fu_443_p2;
                mul15_reg_1372 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul1_reg_1242 <= grp_fu_439_p2;
                mul4_reg_1247 <= grp_fu_443_p2;
                mul5_reg_1252 <= grp_fu_447_p2;
                mul_reg_1237 <= grp_fu_435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul2_reg_1277 <= grp_fu_435_p2;
                mul3_reg_1282 <= grp_fu_439_p2;
                mul6_reg_1287 <= grp_fu_443_p2;
                mul7_reg_1292 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln121_reg_1039 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                q0_feat_reg_1089 <= q0_feat_fu_654_p1;
                q1_feat_reg_1095 <= q1_feat_fu_658_p1;
                t0_feat_reg_1101 <= t0_feat_fu_662_p1;
                t1_feat_reg_1109 <= t1_feat_fu_666_p1;
                t2_feat_reg_1116 <= t2_feat_fu_670_p1;
                t3_feat_reg_1122 <= t3_feat_fu_674_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln121_reg_1039 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                q2_feat_reg_1129 <= q2_feat_fu_678_p1;
                q3_feat_reg_1135 <= q3_feat_fu_682_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_451 <= grp_fu_55918_p_dout0;
                reg_456 <= grp_fu_55922_p_dout0;
                reg_461 <= grp_fu_55926_p_dout0;
                reg_466 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_471 <= grp_fu_55918_p_dout0;
                reg_476 <= grp_fu_55922_p_dout0;
                reg_481 <= grp_fu_55926_p_dout0;
                reg_486 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln136_reg_1043(5 downto 0) <= zext_ln136_fu_591_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln136_reg_1043(15 downto 6) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter4_stage0, ap_idle_pp0_0to3, ap_idle_pp0_1to5, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter4_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to5 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln121_fu_585_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv6_1));
    add_ln124_fu_609_p2 <= std_logic_vector(unsigned(mul_ln61) + unsigned(zext_ln136_fu_591_p1));
    add_ln125_fu_620_p2 <= std_logic_vector(unsigned(mul_ln62) + unsigned(zext_ln136_fu_591_p1));
    add_ln126_fu_636_p2 <= std_logic_vector(unsigned(mul_ln63) + unsigned(zext_ln136_reg_1043));
    add_ln127_fu_645_p2 <= std_logic_vector(unsigned(mul_ln64) + unsigned(zext_ln136_reg_1043));
    add_ln136_fu_595_p2 <= std_logic_vector(unsigned(mul_ln136) + unsigned(zext_ln136_fu_591_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln121_reg_1039)
    begin
        if (((icmp_ln121_reg_1039 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln121_reg_1039_pp0_iter3_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter4_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter4_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to5_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to5 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q0_t0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_419_p2, distance_q0_t0_fu_128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_distance_q0_t0_load <= grp_fu_419_p2;
        else 
            ap_sig_allocacmp_distance_q0_t0_load <= distance_q0_t0_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q0_t1_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_427_p2, distance_q0_t1_fu_124)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_distance_q0_t1_load <= grp_fu_427_p2;
        else 
            ap_sig_allocacmp_distance_q0_t1_load <= distance_q0_t1_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q0_t2_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, grp_fu_419_p2, ap_block_pp0_stage3, distance_q0_t2_fu_120)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_sig_allocacmp_distance_q0_t2_load <= grp_fu_419_p2;
        else 
            ap_sig_allocacmp_distance_q0_t2_load <= distance_q0_t2_fu_120;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q0_t3_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, grp_fu_419_p2, distance_q0_t3_fu_116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_distance_q0_t3_load <= grp_fu_419_p2;
        else 
            ap_sig_allocacmp_distance_q0_t3_load <= distance_q0_t3_fu_116;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q1_t0_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, grp_fu_423_p2, distance_q1_t0_fu_112)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_distance_q1_t0_load <= grp_fu_423_p2;
        else 
            ap_sig_allocacmp_distance_q1_t0_load <= distance_q1_t0_fu_112;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q1_t1_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, grp_fu_423_p2, distance_q1_t1_fu_108)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_distance_q1_t1_load <= grp_fu_423_p2;
        else 
            ap_sig_allocacmp_distance_q1_t1_load <= distance_q1_t1_fu_108;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q1_t2_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, distance_q1_t2_fu_104, grp_fu_431_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_distance_q1_t2_load <= grp_fu_431_p2;
        else 
            ap_sig_allocacmp_distance_q1_t2_load <= distance_q1_t2_fu_104;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q1_t3_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, distance_q1_t3_fu_100, grp_fu_423_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_sig_allocacmp_distance_q1_t3_load <= grp_fu_423_p2;
        else 
            ap_sig_allocacmp_distance_q1_t3_load <= distance_q1_t3_fu_100;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q2_t0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, grp_fu_427_p2, distance_q2_t0_fu_96, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_sig_allocacmp_distance_q2_t0_load <= grp_fu_427_p2;
        else 
            ap_sig_allocacmp_distance_q2_t0_load <= distance_q2_t0_fu_96;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q2_t1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, distance_q2_t1_fu_92, grp_fu_427_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_distance_q2_t1_load <= grp_fu_427_p2;
        else 
            ap_sig_allocacmp_distance_q2_t1_load <= distance_q2_t1_fu_92;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q2_t2_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, distance_q2_t2_fu_88, grp_fu_419_p2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_distance_q2_t2_load <= grp_fu_419_p2;
        else 
            ap_sig_allocacmp_distance_q2_t2_load <= distance_q2_t2_fu_88;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q2_t3_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, grp_fu_427_p2, distance_q2_t3_fu_132)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_distance_q2_t3_load <= grp_fu_427_p2;
        else 
            ap_sig_allocacmp_distance_q2_t3_load <= distance_q2_t3_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q3_t0_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, grp_fu_431_p2, distance_q3_t0_fu_136)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_distance_q3_t0_load <= grp_fu_431_p2;
        else 
            ap_sig_allocacmp_distance_q3_t0_load <= distance_q3_t0_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q3_t1_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, grp_fu_431_p2, distance_q3_t1_fu_140)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_sig_allocacmp_distance_q3_t1_load <= grp_fu_431_p2;
        else 
            ap_sig_allocacmp_distance_q3_t1_load <= distance_q3_t1_fu_140;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q3_t2_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, grp_fu_431_p2, distance_q3_t2_fu_144)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_distance_q3_t2_load <= grp_fu_431_p2;
        else 
            ap_sig_allocacmp_distance_q3_t2_load <= distance_q3_t2_fu_144;
        end if; 
    end process;


    ap_sig_allocacmp_distance_q3_t3_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, grp_fu_423_p2, distance_q3_t3_fu_148)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_distance_q3_t3_load <= grp_fu_423_p2;
        else 
            ap_sig_allocacmp_distance_q3_t3_load <= distance_q3_t3_fu_148;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_152;
        end if; 
    end process;

    distance_q0_t0_out <= distance_q0_t0_fu_128;

    distance_q0_t0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q0_t0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q0_t0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q0_t1_out <= distance_q0_t1_fu_124;

    distance_q0_t1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q0_t1_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q0_t1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q0_t2_out <= distance_q0_t2_fu_120;

    distance_q0_t2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q0_t2_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q0_t2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q0_t3_out <= distance_q0_t3_fu_116;

    distance_q0_t3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q0_t3_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q0_t3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q1_t0_out <= distance_q1_t0_fu_112;

    distance_q1_t0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q1_t0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q1_t0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q1_t1_out <= distance_q1_t1_fu_108;

    distance_q1_t1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q1_t1_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q1_t1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q1_t2_out <= distance_q1_t2_fu_104;

    distance_q1_t2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q1_t2_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q1_t2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q1_t3_out <= distance_q1_t3_fu_100;

    distance_q1_t3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q1_t3_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q1_t3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q2_t0_out <= distance_q2_t0_fu_96;

    distance_q2_t0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q2_t0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q2_t0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q2_t1_out <= distance_q2_t1_fu_92;

    distance_q2_t1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q2_t1_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q2_t1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q2_t2_out <= distance_q2_t2_fu_88;

    distance_q2_t2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q2_t2_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q2_t2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q2_t3_out <= distance_q2_t3_fu_132;

    distance_q2_t3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q2_t3_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q2_t3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q3_t0_out <= distance_q3_t0_fu_136;

    distance_q3_t0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q3_t0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q3_t0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q3_t1_out <= distance_q3_t1_fu_140;

    distance_q3_t1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q3_t1_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q3_t1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q3_t2_out <= distance_q3_t2_fu_144;

    distance_q3_t2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q3_t2_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q3_t2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_q3_t3_out <= distance_q3_t3_fu_148;

    distance_q3_t3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln121_reg_1039_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln121_reg_1039_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_q3_t3_out_ap_vld <= ap_const_logic_1;
        else 
            distance_q3_t3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_391_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, q0_feat_reg_1089, q2_feat_reg_1129, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_391_p0 <= q2_feat_reg_1129;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_391_p0 <= q0_feat_reg_1089;
        else 
            grp_fu_391_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_391_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, t0_feat_reg_1101, t2_feat_reg_1116, t3_feat_reg_1122, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_391_p1 <= t3_feat_reg_1122;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_391_p1 <= t2_feat_reg_1116;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_391_p1 <= t0_feat_reg_1101;
        else 
            grp_fu_391_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_395_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, q1_feat_reg_1095, q3_feat_reg_1135, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_395_p0 <= q3_feat_reg_1135;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_395_p0 <= q1_feat_reg_1095;
        else 
            grp_fu_395_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_395_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, t0_feat_reg_1101, t1_feat_reg_1109, t3_feat_reg_1122, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_395_p1 <= t0_feat_reg_1101;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_395_p1 <= t3_feat_reg_1122;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_395_p1 <= t1_feat_reg_1109;
        else 
            grp_fu_395_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_399_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, q0_feat_reg_1089, q2_feat_reg_1129, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_399_p0 <= q2_feat_reg_1129;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_399_p0 <= q0_feat_reg_1089;
        else 
            grp_fu_399_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_399_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, t0_feat_reg_1101, t1_feat_reg_1109, t3_feat_reg_1122, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_399_p1 <= t0_feat_reg_1101;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_399_p1 <= t3_feat_reg_1122;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_399_p1 <= t1_feat_reg_1109;
        else 
            grp_fu_399_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_403_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, q1_feat_reg_1095, q3_feat_reg_1135, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_403_p0 <= q3_feat_reg_1135;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_403_p0 <= q1_feat_reg_1095;
        else 
            grp_fu_403_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_403_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, t0_feat_reg_1101, t1_feat_reg_1109, t2_feat_reg_1116, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_403_p1 <= t1_feat_reg_1109;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_403_p1 <= t0_feat_reg_1101;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_403_p1 <= t2_feat_reg_1116;
        else 
            grp_fu_403_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_407_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, reg_451, ap_CS_fsm_pp0_stage1, reg_471, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_407_p0 <= reg_471;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_407_p0 <= reg_451;
        else 
            grp_fu_407_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_410_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, reg_456, ap_CS_fsm_pp0_stage2, reg_476, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_410_p0 <= reg_476;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_410_p0 <= reg_456;
        else 
            grp_fu_410_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_413_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, reg_461, ap_CS_fsm_pp0_stage2, reg_481, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_413_p0 <= reg_481;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_413_p0 <= reg_461;
        else 
            grp_fu_413_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_416_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, reg_466, ap_CS_fsm_pp0_stage2, reg_486, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_416_p0 <= reg_486;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_416_p0 <= reg_466;
        else 
            grp_fu_416_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_419_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_sig_allocacmp_distance_q2_t2_load, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_sig_allocacmp_distance_q0_t3_load, ap_sig_allocacmp_distance_q0_t2_load, ap_sig_allocacmp_distance_q0_t0_load)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_419_p0 <= ap_sig_allocacmp_distance_q0_t3_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_419_p0 <= ap_sig_allocacmp_distance_q0_t2_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_419_p0 <= ap_sig_allocacmp_distance_q2_t2_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_419_p0 <= ap_sig_allocacmp_distance_q0_t0_load;
        else 
            grp_fu_419_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_419_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_reg_1237, mul2_reg_1277, mul8_reg_1317, mul12_reg_1357, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_419_p1 <= mul12_reg_1357;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_419_p1 <= mul8_reg_1317;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_419_p1 <= mul2_reg_1277;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_419_p1 <= mul_reg_1237;
        else 
            grp_fu_419_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_sig_allocacmp_distance_q1_t3_load, ap_sig_allocacmp_distance_q1_t1_load, ap_sig_allocacmp_distance_q1_t0_load, ap_sig_allocacmp_distance_q3_t3_load)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_423_p0 <= ap_sig_allocacmp_distance_q1_t0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_423_p0 <= ap_sig_allocacmp_distance_q1_t3_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_423_p0 <= ap_sig_allocacmp_distance_q3_t3_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_423_p0 <= ap_sig_allocacmp_distance_q1_t1_load;
        else 
            grp_fu_423_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul1_reg_1242, mul3_reg_1282, mul9_reg_1322, mul13_reg_1362, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_423_p1 <= mul13_reg_1362;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_423_p1 <= mul9_reg_1322;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_423_p1 <= mul3_reg_1282;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_423_p1 <= mul1_reg_1242;
        else 
            grp_fu_423_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_427_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_sig_allocacmp_distance_q2_t1_load, ap_sig_allocacmp_distance_q2_t0_load, ap_block_pp0_stage3, ap_sig_allocacmp_distance_q0_t1_load, ap_sig_allocacmp_distance_q2_t3_load)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_427_p0 <= ap_sig_allocacmp_distance_q2_t1_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_427_p0 <= ap_sig_allocacmp_distance_q2_t0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_427_p0 <= ap_sig_allocacmp_distance_q2_t3_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_427_p0 <= ap_sig_allocacmp_distance_q0_t1_load;
        else 
            grp_fu_427_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_427_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul4_reg_1247, mul6_reg_1287, mul10_reg_1327, mul14_reg_1367, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_427_p1 <= mul14_reg_1367;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_427_p1 <= mul10_reg_1327;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_427_p1 <= mul6_reg_1287;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_427_p1 <= mul4_reg_1247;
        else 
            grp_fu_427_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_431_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_sig_allocacmp_distance_q1_t2_load, ap_sig_allocacmp_distance_q3_t0_load, ap_sig_allocacmp_distance_q3_t1_load, ap_sig_allocacmp_distance_q3_t2_load)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_431_p0 <= ap_sig_allocacmp_distance_q3_t2_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_431_p0 <= ap_sig_allocacmp_distance_q3_t1_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_431_p0 <= ap_sig_allocacmp_distance_q3_t0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_431_p0 <= ap_sig_allocacmp_distance_q1_t2_load;
        else 
            grp_fu_431_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_431_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul5_reg_1252, mul7_reg_1292, mul11_reg_1332, mul15_reg_1372, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_431_p1 <= mul15_reg_1372;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_431_p1 <= mul11_reg_1332;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_431_p1 <= mul7_reg_1292;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_431_p1 <= mul5_reg_1252;
        else 
            grp_fu_431_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_435_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q0_t0_reg_1141, diff_q2_t2_reg_1165, diff_q0_t2_reg_1189, diff_q0_t3_reg_1213, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_435_p0 <= diff_q0_t3_reg_1213;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_435_p0 <= diff_q0_t2_reg_1189;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_435_p0 <= diff_q2_t2_reg_1165;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_435_p0 <= diff_q0_t0_reg_1141;
            else 
                grp_fu_435_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_435_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_435_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q0_t0_reg_1141, diff_q2_t2_reg_1165, diff_q0_t2_reg_1189, diff_q0_t3_reg_1213, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_435_p1 <= diff_q0_t3_reg_1213;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_435_p1 <= diff_q0_t2_reg_1189;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_435_p1 <= diff_q2_t2_reg_1165;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_435_p1 <= diff_q0_t0_reg_1141;
            else 
                grp_fu_435_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_435_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_439_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q1_t1_reg_1147, diff_q3_t3_reg_1171, diff_q1_t3_reg_1195, diff_q1_t0_reg_1219, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_439_p0 <= diff_q1_t0_reg_1219;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_439_p0 <= diff_q1_t3_reg_1195;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_439_p0 <= diff_q3_t3_reg_1171;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_439_p0 <= diff_q1_t1_reg_1147;
            else 
                grp_fu_439_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_439_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_439_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q1_t1_reg_1147, diff_q3_t3_reg_1171, diff_q1_t3_reg_1195, diff_q1_t0_reg_1219, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_439_p1 <= diff_q1_t0_reg_1219;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_439_p1 <= diff_q1_t3_reg_1195;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_439_p1 <= diff_q3_t3_reg_1171;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_439_p1 <= diff_q1_t1_reg_1147;
            else 
                grp_fu_439_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_439_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q0_t1_reg_1153, diff_q2_t3_reg_1177, diff_q2_t0_reg_1201, diff_q2_t1_reg_1225, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_443_p0 <= diff_q2_t1_reg_1225;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_443_p0 <= diff_q2_t0_reg_1201;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_443_p0 <= diff_q2_t3_reg_1177;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_443_p0 <= diff_q0_t1_reg_1153;
            else 
                grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q0_t1_reg_1153, diff_q2_t3_reg_1177, diff_q2_t0_reg_1201, diff_q2_t1_reg_1225, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_443_p1 <= diff_q2_t1_reg_1225;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_443_p1 <= diff_q2_t0_reg_1201;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_443_p1 <= diff_q2_t3_reg_1177;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_443_p1 <= diff_q0_t1_reg_1153;
            else 
                grp_fu_443_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_443_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_447_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q1_t2_reg_1159, diff_q3_t0_reg_1183, diff_q3_t1_reg_1207, diff_q3_t2_reg_1231, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_447_p0 <= diff_q3_t2_reg_1231;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_447_p0 <= diff_q3_t1_reg_1207;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_447_p0 <= diff_q3_t0_reg_1183;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_447_p0 <= diff_q1_t2_reg_1159;
            else 
                grp_fu_447_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_447_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_447_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, diff_q1_t2_reg_1159, diff_q3_t0_reg_1183, diff_q3_t1_reg_1207, diff_q3_t2_reg_1231, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_447_p1 <= diff_q3_t2_reg_1231;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_447_p1 <= diff_q3_t1_reg_1207;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_447_p1 <= diff_q3_t0_reg_1183;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_447_p1 <= diff_q1_t2_reg_1159;
            else 
                grp_fu_447_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_447_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_55918_p_ce <= ap_const_logic_1;
    grp_fu_55918_p_din0 <= grp_fu_391_p0;
    grp_fu_55918_p_din1 <= grp_fu_391_p1;
    grp_fu_55918_p_opcode <= ap_const_lv2_1;
    grp_fu_55922_p_ce <= ap_const_logic_1;
    grp_fu_55922_p_din0 <= grp_fu_395_p0;
    grp_fu_55922_p_din1 <= grp_fu_395_p1;
    grp_fu_55922_p_opcode <= ap_const_lv2_1;
    grp_fu_55926_p_ce <= ap_const_logic_1;
    grp_fu_55926_p_din0 <= grp_fu_399_p0;
    grp_fu_55926_p_din1 <= grp_fu_399_p1;
    grp_fu_55926_p_opcode <= ap_const_lv2_1;
    grp_fu_56117_p_ce <= ap_const_logic_1;
    grp_fu_56117_p_din0 <= grp_fu_407_p0;
    icmp_ln121_fu_579_p2 <= "1" when (ap_sig_allocacmp_j_1 = ap_const_lv6_2B) else "0";
    q0_feat_fu_654_p1 <= testing_X_q1;
    q1_feat_fu_658_p1 <= testing_X_q0;
    q2_feat_fu_678_p1 <= testing_X_q1;
    q3_feat_fu_682_p1 <= testing_X_q0;
    t0_feat_fu_662_p1 <= training_X_0_q0;
    t1_feat_fu_666_p1 <= training_X_1_q0;
    t2_feat_fu_670_p1 <= training_X_2_q0;
    t3_feat_fu_674_p1 <= training_X_3_q0;

    testing_X_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln125_fu_626_p1, ap_block_pp0_stage1, zext_ln127_fu_649_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                testing_X_address0 <= zext_ln127_fu_649_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                testing_X_address0 <= zext_ln125_fu_626_p1(16 - 1 downto 0);
            else 
                testing_X_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            testing_X_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    testing_X_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln124_fu_615_p1, zext_ln126_fu_640_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                testing_X_address1 <= zext_ln126_fu_640_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                testing_X_address1 <= zext_ln124_fu_615_p1(16 - 1 downto 0);
            else 
                testing_X_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            testing_X_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    testing_X_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            testing_X_ce0 <= ap_const_logic_1;
        else 
            testing_X_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    testing_X_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            testing_X_ce1 <= ap_const_logic_1;
        else 
            testing_X_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    training_X_0_address0 <= zext_ln136_1_fu_601_p1(16 - 1 downto 0);

    training_X_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_X_0_ce0 <= ap_const_logic_1;
        else 
            training_X_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_X_1_address0 <= zext_ln136_1_fu_601_p1(16 - 1 downto 0);

    training_X_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_X_1_ce0 <= ap_const_logic_1;
        else 
            training_X_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_X_2_address0 <= zext_ln136_1_fu_601_p1(16 - 1 downto 0);

    training_X_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_X_2_ce0 <= ap_const_logic_1;
        else 
            training_X_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_X_3_address0 <= zext_ln136_1_fu_601_p1(16 - 1 downto 0);

    training_X_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_X_3_ce0 <= ap_const_logic_1;
        else 
            training_X_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln124_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_fu_609_p2),64));
    zext_ln125_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln125_fu_620_p2),64));
    zext_ln126_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln126_fu_636_p2),64));
    zext_ln127_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln127_fu_645_p2),64));
    zext_ln136_1_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_fu_595_p2),64));
    zext_ln136_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),16));
end behav;
