

================================================================
== Vitis HLS Report for 'kNN_Predict_4_Pipeline_VITIS_LOOP_17_12'
================================================================
* Date:           Wed Sep  6 02:16:07 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        knn_vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.241 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       23|       23|  0.230 us|  0.230 us|   23|   23|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_17_1  |       21|       21|         2|          1|          1|    20|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%worstOfBest_2 = alloca i32 1"   --->   Operation 5 'alloca' 'worstOfBest_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%worstOfBestIdx_2 = alloca i32 1"   --->   Operation 6 'alloca' 'worstOfBestIdx_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%secondWorstOfBest_3 = alloca i32 1"   --->   Operation 7 'alloca' 'secondWorstOfBest_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%secondWorstOfBestIdx = alloca i32 1"   --->   Operation 8 'alloca' 'secondWorstOfBestIdx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%bestDistances_0_60_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_60"   --->   Operation 9 'read' 'bestDistances_0_60_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%bestDistances_0_59_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_59"   --->   Operation 10 'read' 'bestDistances_0_59_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%bestDistances_0_58_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_58"   --->   Operation 11 'read' 'bestDistances_0_58_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%bestDistances_0_57_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_57"   --->   Operation 12 'read' 'bestDistances_0_57_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%bestDistances_0_56_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_56"   --->   Operation 13 'read' 'bestDistances_0_56_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%bestDistances_0_55_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_55"   --->   Operation 14 'read' 'bestDistances_0_55_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%bestDistances_0_54_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_54"   --->   Operation 15 'read' 'bestDistances_0_54_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%bestDistances_0_53_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_53"   --->   Operation 16 'read' 'bestDistances_0_53_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%bestDistances_0_52_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_52"   --->   Operation 17 'read' 'bestDistances_0_52_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%bestDistances_0_51_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_51"   --->   Operation 18 'read' 'bestDistances_0_51_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%bestDistances_0_50_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_50"   --->   Operation 19 'read' 'bestDistances_0_50_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%bestDistances_0_49_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_49"   --->   Operation 20 'read' 'bestDistances_0_49_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%bestDistances_0_48_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_48"   --->   Operation 21 'read' 'bestDistances_0_48_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%bestDistances_0_47_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_47"   --->   Operation 22 'read' 'bestDistances_0_47_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%bestDistances_0_46_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_46"   --->   Operation 23 'read' 'bestDistances_0_46_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%bestDistances_0_45_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_45"   --->   Operation 24 'read' 'bestDistances_0_45_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%bestDistances_0_44_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_44"   --->   Operation 25 'read' 'bestDistances_0_44_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%bestDistances_0_43_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_43"   --->   Operation 26 'read' 'bestDistances_0_43_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%bestDistances_0_42_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_42"   --->   Operation 27 'read' 'bestDistances_0_42_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%bestDistances_0_41_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %bestDistances_0_41"   --->   Operation 28 'read' 'bestDistances_0_41_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 0, i5 %secondWorstOfBestIdx"   --->   Operation 29 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 30 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %secondWorstOfBest_3"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 31 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 4294967295, i32 %worstOfBestIdx_2"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %worstOfBest_2"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body.i575"   --->   Operation 33 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.55>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%i = load i5 %secondWorstOfBestIdx" [knn/knn_4.cpp:17]   --->   Operation 34 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.75ns)   --->   "%icmp_ln17 = icmp_eq  i5 %i, i5 20" [knn/knn_4.cpp:17]   --->   Operation 35 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 0.75> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.78ns)   --->   "%add_ln17 = add i5 %i, i5 1" [knn/knn_4.cpp:17]   --->   Operation 36 'add' 'add_ln17' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %icmp_ln17, void %for.body.i575.split_ifconv, void %for.cond.cleanup.i571.exitStub" [knn/knn_4.cpp:17]   --->   Operation 37 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%worstOfBest_2_load_1 = load i64 %worstOfBest_2" [knn/knn_4.cpp:21]   --->   Operation 38 'load' 'worstOfBest_2_load_1' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%secondWorstOfBest_3_load_1 = load i64 %secondWorstOfBest_3" [knn/knn_4.cpp:29]   --->   Operation 39 'load' 'secondWorstOfBest_3_load_1' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.73ns)   --->   "%secondWorstOfBest_4 = mux i64 @_ssdm_op_Mux.ap_auto.20double.i5, i64 %bestDistances_0_41_read, i64 %bestDistances_0_42_read, i64 %bestDistances_0_43_read, i64 %bestDistances_0_44_read, i64 %bestDistances_0_45_read, i64 %bestDistances_0_46_read, i64 %bestDistances_0_47_read, i64 %bestDistances_0_48_read, i64 %bestDistances_0_49_read, i64 %bestDistances_0_50_read, i64 %bestDistances_0_51_read, i64 %bestDistances_0_52_read, i64 %bestDistances_0_53_read, i64 %bestDistances_0_54_read, i64 %bestDistances_0_55_read, i64 %bestDistances_0_56_read, i64 %bestDistances_0_57_read, i64 %bestDistances_0_58_read, i64 %bestDistances_0_59_read, i64 %bestDistances_0_60_read, i5 %i" [knn/knn_4.cpp:21]   --->   Operation 40 'mux' 'secondWorstOfBest_4' <Predicate = (!icmp_ln17)> <Delay = 0.73> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [2/2] (2.81ns)   --->   "%tmp_30 = fcmp_olt  i64 %worstOfBest_2_load_1, i64 %secondWorstOfBest_4" [knn/knn_4.cpp:21]   --->   Operation 41 'dcmp' 'tmp_30' <Predicate = (!icmp_ln17)> <Delay = 2.81> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 2.81> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [2/2] (2.81ns)   --->   "%tmp_32 = fcmp_olt  i64 %secondWorstOfBest_3_load_1, i64 %secondWorstOfBest_4" [knn/knn_4.cpp:29]   --->   Operation 42 'dcmp' 'tmp_32' <Predicate = (!icmp_ln17)> <Delay = 2.81> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 2.81> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.42ns)   --->   "%store_ln17 = store i5 %add_ln17, i5 %secondWorstOfBestIdx" [knn/knn_4.cpp:17]   --->   Operation 43 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 4.24>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%worstOfBestIdx = load i32 %worstOfBestIdx_2" [knn/knn_4.cpp:17]   --->   Operation 44 'load' 'worstOfBestIdx' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln17 = trunc i32 %worstOfBestIdx" [knn/knn_4.cpp:17]   --->   Operation 45 'trunc' 'trunc_ln17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 20, i64 20, i64 20"   --->   Operation 46 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%specpipeline_ln19 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [knn/knn_4.cpp:19]   --->   Operation 47 'specpipeline' 'specpipeline_ln19' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%specloopname_ln12 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [knn/knn_4.cpp:12]   --->   Operation 48 'specloopname' 'specloopname_ln12' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%bitcast_ln21_2 = bitcast i64 %worstOfBest_2_load_1" [knn/knn_4.cpp:21]   --->   Operation 49 'bitcast' 'bitcast_ln21_2' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_s = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln21_2, i32 52, i32 62" [knn/knn_4.cpp:21]   --->   Operation 50 'partselect' 'tmp_s' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln21 = trunc i64 %bitcast_ln21_2" [knn/knn_4.cpp:21]   --->   Operation 51 'trunc' 'trunc_ln21' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%bitcast_ln21_3 = bitcast i64 %secondWorstOfBest_4" [knn/knn_4.cpp:21]   --->   Operation 52 'bitcast' 'bitcast_ln21_3' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_29 = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln21_3, i32 52, i32 62" [knn/knn_4.cpp:21]   --->   Operation 53 'partselect' 'tmp_29' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln21_8 = trunc i64 %bitcast_ln21_3" [knn/knn_4.cpp:21]   --->   Operation 54 'trunc' 'trunc_ln21_8' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.94ns)   --->   "%icmp_ln21_4 = icmp_ne  i11 %tmp_s, i11 2047" [knn/knn_4.cpp:21]   --->   Operation 55 'icmp' 'icmp_ln21_4' <Predicate = (!icmp_ln17)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (1.14ns)   --->   "%icmp_ln21_5 = icmp_eq  i52 %trunc_ln21, i52 0" [knn/knn_4.cpp:21]   --->   Operation 56 'icmp' 'icmp_ln21_5' <Predicate = (!icmp_ln17)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node and_ln21_3)   --->   "%or_ln21_2 = or i1 %icmp_ln21_5, i1 %icmp_ln21_4" [knn/knn_4.cpp:21]   --->   Operation 57 'or' 'or_ln21_2' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.94ns)   --->   "%icmp_ln21_6 = icmp_ne  i11 %tmp_29, i11 2047" [knn/knn_4.cpp:21]   --->   Operation 58 'icmp' 'icmp_ln21_6' <Predicate = (!icmp_ln17)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (1.14ns)   --->   "%icmp_ln21_7 = icmp_eq  i52 %trunc_ln21_8, i52 0" [knn/knn_4.cpp:21]   --->   Operation 59 'icmp' 'icmp_ln21_7' <Predicate = (!icmp_ln17)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.28ns)   --->   "%or_ln21_3 = or i1 %icmp_ln21_7, i1 %icmp_ln21_6" [knn/knn_4.cpp:21]   --->   Operation 60 'or' 'or_ln21_3' <Predicate = (!icmp_ln17)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/2] (2.81ns)   --->   "%tmp_30 = fcmp_olt  i64 %worstOfBest_2_load_1, i64 %secondWorstOfBest_4" [knn/knn_4.cpp:21]   --->   Operation 61 'dcmp' 'tmp_30' <Predicate = (!icmp_ln17)> <Delay = 2.81> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 2.81> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node and_ln21_3)   --->   "%and_ln21_2 = and i1 %tmp_30, i1 %or_ln21_3" [knn/knn_4.cpp:21]   --->   Operation 62 'and' 'and_ln21_2' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln21_3 = and i1 %and_ln21_2, i1 %or_ln21_2" [knn/knn_4.cpp:21]   --->   Operation 63 'and' 'and_ln21_3' <Predicate = (!icmp_ln17)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i5 %i" [knn/knn_4.cpp:21]   --->   Operation 64 'zext' 'zext_ln21' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%bitcast_ln29 = bitcast i64 %secondWorstOfBest_3_load_1" [knn/knn_4.cpp:29]   --->   Operation 65 'bitcast' 'bitcast_ln29' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln29, i32 52, i32 62" [knn/knn_4.cpp:29]   --->   Operation 66 'partselect' 'tmp_31' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i64 %bitcast_ln29" [knn/knn_4.cpp:29]   --->   Operation 67 'trunc' 'trunc_ln29' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.94ns)   --->   "%icmp_ln29_2 = icmp_ne  i11 %tmp_31, i11 2047" [knn/knn_4.cpp:29]   --->   Operation 68 'icmp' 'icmp_ln29_2' <Predicate = (!icmp_ln17)> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (1.14ns)   --->   "%icmp_ln29_3 = icmp_eq  i52 %trunc_ln29, i52 0" [knn/knn_4.cpp:29]   --->   Operation 69 'icmp' 'icmp_ln29_3' <Predicate = (!icmp_ln17)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_5)   --->   "%or_ln29 = or i1 %icmp_ln29_3, i1 %icmp_ln29_2" [knn/knn_4.cpp:29]   --->   Operation 70 'or' 'or_ln29' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_5)   --->   "%and_ln29_3 = and i1 %or_ln29, i1 %or_ln21_3" [knn/knn_4.cpp:29]   --->   Operation 71 'and' 'and_ln29_3' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/2] (2.81ns)   --->   "%tmp_32 = fcmp_olt  i64 %secondWorstOfBest_3_load_1, i64 %secondWorstOfBest_4" [knn/knn_4.cpp:29]   --->   Operation 72 'dcmp' 'tmp_32' <Predicate = (!icmp_ln17)> <Delay = 2.81> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 2.81> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_5)   --->   "%and_ln29_4 = and i1 %and_ln29_3, i1 %tmp_32" [knn/knn_4.cpp:29]   --->   Operation 73 'and' 'and_ln29_4' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.42ns)   --->   "%secondWorstOfBest = select i1 %and_ln21_3, i64 %secondWorstOfBest_4, i64 %worstOfBest_2_load_1" [knn/knn_4.cpp:21]   --->   Operation 74 'select' 'secondWorstOfBest' <Predicate = (!icmp_ln17)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.44ns)   --->   "%worstOfBestIdx_12 = select i1 %and_ln21_3, i32 %zext_ln21, i32 %worstOfBestIdx" [knn/knn_4.cpp:21]   --->   Operation 75 'select' 'worstOfBestIdx_12' <Predicate = (!icmp_ln17)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_5)   --->   "%xor_ln21 = xor i1 %and_ln21_3, i1 1" [knn/knn_4.cpp:21]   --->   Operation 76 'xor' 'xor_ln21' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln29_5 = and i1 %and_ln29_4, i1 %xor_ln21" [knn/knn_4.cpp:29]   --->   Operation 77 'and' 'and_ln29_5' <Predicate = (!icmp_ln17)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node secondWorstOfBest_31)   --->   "%secondWorstOfBest_30 = select i1 %and_ln29_5, i64 %secondWorstOfBest_4, i64 %secondWorstOfBest_3_load_1" [knn/knn_4.cpp:29]   --->   Operation 78 'select' 'secondWorstOfBest_30' <Predicate = (!icmp_ln17)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.42ns) (out node of the LUT)   --->   "%secondWorstOfBest_31 = select i1 %and_ln21_3, i64 %worstOfBest_2_load_1, i64 %secondWorstOfBest_30" [knn/knn_4.cpp:21]   --->   Operation 79 'select' 'secondWorstOfBest_31' <Predicate = (!icmp_ln17)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.42ns)   --->   "%store_ln17 = store i64 %secondWorstOfBest_31, i64 %secondWorstOfBest_3" [knn/knn_4.cpp:17]   --->   Operation 80 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>
ST_3 : Operation 81 [1/1] (0.42ns)   --->   "%store_ln17 = store i32 %worstOfBestIdx_12, i32 %worstOfBestIdx_2" [knn/knn_4.cpp:17]   --->   Operation 81 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>
ST_3 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln17 = store i64 %secondWorstOfBest, i64 %worstOfBest_2" [knn/knn_4.cpp:17]   --->   Operation 82 'store' 'store_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.42>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln17 = br void %for.body.i575" [knn/knn_4.cpp:17]   --->   Operation 83 'br' 'br_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%worstOfBest_2_load = load i64 %worstOfBest_2"   --->   Operation 84 'load' 'worstOfBest_2_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%secondWorstOfBest_3_load = load i64 %secondWorstOfBest_3"   --->   Operation 85 'load' 'secondWorstOfBest_3_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.doubleP0A, i64 %secondWorstOfBest_3_out, i64 %secondWorstOfBest_3_load"   --->   Operation 86 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%write_ln17 = write void @_ssdm_op_Write.ap_auto.i5P0A, i5 %worstOfBestIdx_2_out, i5 %trunc_ln17" [knn/knn_4.cpp:17]   --->   Operation 87 'write' 'write_ln17' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.doubleP0A, i64 %worstOfBest_2_out, i64 %worstOfBest_2_load"   --->   Operation 88 'write' 'write_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 89 'ret' 'ret_ln0' <Predicate = (icmp_ln17)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('secondWorstOfBestIdx') [27]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'secondWorstOfBestIdx' [48]  (0.427 ns)

 <State 2>: 3.55ns
The critical path consists of the following:
	'load' operation ('i', knn/knn_4.cpp:17) on local variable 'secondWorstOfBestIdx' [55]  (0 ns)
	'mux' operation ('secondWorstOfBest', knn/knn_4.cpp:21) [66]  (0.738 ns)
	'dcmp' operation ('tmp_30', knn/knn_4.cpp:21) [79]  (2.82 ns)

 <State 3>: 4.24ns
The critical path consists of the following:
	'dcmp' operation ('tmp_30', knn/knn_4.cpp:21) [79]  (2.82 ns)
	'and' operation ('and_ln21_2', knn/knn_4.cpp:21) [80]  (0 ns)
	'and' operation ('and_ln21_3', knn/knn_4.cpp:21) [81]  (0.287 ns)
	'xor' operation ('xor_ln21', knn/knn_4.cpp:21) [94]  (0 ns)
	'and' operation ('and_ln29_5', knn/knn_4.cpp:29) [95]  (0.287 ns)
	'select' operation ('secondWorstOfBest', knn/knn_4.cpp:29) [96]  (0 ns)
	'select' operation ('secondWorstOfBest', knn/knn_4.cpp:21) [97]  (0.424 ns)
	'store' operation ('store_ln17', knn/knn_4.cpp:17) of variable 'secondWorstOfBest', knn/knn_4.cpp:21 on local variable 'secondWorstOfBest' [99]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
