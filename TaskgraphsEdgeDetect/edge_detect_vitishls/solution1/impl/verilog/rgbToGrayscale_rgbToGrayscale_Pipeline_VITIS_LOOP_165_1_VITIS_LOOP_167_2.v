// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rgbToGrayscale_rgbToGrayscale_Pipeline_VITIS_LOOP_165_1_VITIS_LOOP_167_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln165,
        input_image,
        trunc_ln1
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln165;
input  [63:0] input_image;
input  [5:0] trunc_ln1;

reg ap_idle;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [0:0] icmp_ln165_reg_1220;
reg    ap_block_state3_io;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_state36_pp0_stage2_iter11;
wire    ap_block_state39_pp0_stage2_iter12;
wire    ap_block_state42_pp0_stage2_iter13;
wire    ap_block_state45_pp0_stage2_iter14;
wire    ap_block_state48_pp0_stage2_iter15;
wire    ap_block_state51_pp0_stage2_iter16;
wire    ap_block_state54_pp0_stage2_iter17;
wire    ap_block_state57_pp0_stage2_iter18;
wire    ap_block_state60_pp0_stage2_iter19;
wire    ap_block_state63_pp0_stage2_iter20;
wire    ap_block_state66_pp0_stage2_iter21;
wire    ap_block_state69_pp0_stage2_iter22;
wire    ap_block_state72_pp0_stage2_iter23;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter24_reg;
reg    ap_block_state75_pp0_stage2_iter24;
wire    ap_block_state78_pp0_stage2_iter25;
wire    ap_block_state81_pp0_stage2_iter26;
wire    ap_block_state84_pp0_stage2_iter27;
wire    ap_block_state87_pp0_stage2_iter28;
wire    ap_block_state90_pp0_stage2_iter29;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] mask_table_address0;
reg    mask_table_ce0;
wire   [51:0] mask_table_q0;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter30_reg;
reg   [0:0] icmp_ln174_reg_1321;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter30_reg;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter23_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter1_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state4_io;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_state34_pp0_stage0_iter11;
wire    ap_block_state37_pp0_stage0_iter12;
wire    ap_block_state40_pp0_stage0_iter13;
wire    ap_block_state43_pp0_stage0_iter14;
wire    ap_block_state46_pp0_stage0_iter15;
wire    ap_block_state49_pp0_stage0_iter16;
wire    ap_block_state52_pp0_stage0_iter17;
wire    ap_block_state55_pp0_stage0_iter18;
wire    ap_block_state58_pp0_stage0_iter19;
wire    ap_block_state61_pp0_stage0_iter20;
wire    ap_block_state64_pp0_stage0_iter21;
wire    ap_block_state67_pp0_stage0_iter22;
wire    ap_block_state70_pp0_stage0_iter23;
reg    ap_block_state73_pp0_stage0_iter24;
wire    ap_block_state76_pp0_stage0_iter25;
wire    ap_block_state79_pp0_stage0_iter26;
wire    ap_block_state82_pp0_stage0_iter27;
wire    ap_block_state85_pp0_stage0_iter28;
wire    ap_block_state88_pp0_stage0_iter29;
wire    ap_block_state91_pp0_stage0_iter30;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] i_1_reg_1204;
reg   [18:0] indvar_flatten_load_reg_1209;
wire   [8:0] trunc_ln167_fu_329_p1;
reg   [8:0] trunc_ln167_reg_1214;
wire   [0:0] icmp_ln165_fu_333_p2;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter2_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter3_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter4_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter5_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter6_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter7_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter8_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter9_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter10_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter11_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter12_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter13_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter14_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter15_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter16_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter17_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter18_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter19_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter20_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter21_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter22_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter25_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter26_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter27_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter28_reg;
reg   [0:0] icmp_ln165_reg_1220_pp0_iter29_reg;
wire   [9:0] add_ln165_1_fu_339_p2;
reg   [9:0] add_ln165_1_reg_1224;
wire   [8:0] trunc_ln167_1_fu_345_p1;
reg   [8:0] trunc_ln167_1_reg_1229;
reg   [9:0] j_load_reg_1235;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_state5_io;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_state35_pp0_stage1_iter11;
wire    ap_block_state38_pp0_stage1_iter12;
wire    ap_block_state41_pp0_stage1_iter13;
wire    ap_block_state44_pp0_stage1_iter14;
wire    ap_block_state47_pp0_stage1_iter15;
wire    ap_block_state50_pp0_stage1_iter16;
wire    ap_block_state53_pp0_stage1_iter17;
wire    ap_block_state56_pp0_stage1_iter18;
wire    ap_block_state59_pp0_stage1_iter19;
wire    ap_block_state62_pp0_stage1_iter20;
wire    ap_block_state65_pp0_stage1_iter21;
wire    ap_block_state68_pp0_stage1_iter22;
wire    ap_block_state71_pp0_stage1_iter23;
reg    ap_block_state74_pp0_stage1_iter24;
wire    ap_block_state77_pp0_stage1_iter25;
wire    ap_block_state80_pp0_stage1_iter26;
wire    ap_block_state83_pp0_stage1_iter27;
wire    ap_block_state86_pp0_stage1_iter28;
wire    ap_block_state89_pp0_stage1_iter29;
wire    ap_block_state92_pp0_stage1_iter30;
reg    ap_predicate_op511_write_state92;
reg    ap_block_state92_io;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln167_fu_383_p2;
reg   [0:0] icmp_ln167_reg_1240;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter1_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter2_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter3_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter4_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter5_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter6_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter7_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter8_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter9_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter10_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter11_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter12_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter13_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter14_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter15_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter16_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter17_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter18_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter19_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter20_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter21_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter22_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter23_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter24_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter25_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter26_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter27_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter28_reg;
reg   [0:0] icmp_ln167_reg_1240_pp0_iter29_reg;
wire   [10:0] select_ln165_1_fu_389_p3;
reg   [10:0] select_ln165_1_reg_1247;
wire   [20:0] select_ln165_3_fu_425_p3;
reg   [20:0] select_ln165_3_reg_1253;
wire   [3:0] trunc_ln169_fu_455_p1;
reg   [3:0] trunc_ln169_reg_1259;
reg   [57:0] trunc_ln169_2_reg_1264;
reg    ap_block_pp0_stage2_11001;
wire   [3:0] trunc_ln169_6_fu_533_p1;
reg   [3:0] trunc_ln169_6_reg_1275;
reg   [57:0] trunc_ln169_5_reg_1280;
wire   [21:0] add_ln169_7_fu_552_p2;
reg   [21:0] add_ln169_7_reg_1285;
wire   [3:0] trunc_ln169_10_fu_558_p1;
reg   [3:0] trunc_ln169_10_reg_1290;
wire   [5:0] add_ln169_2_fu_589_p2;
reg   [5:0] add_ln169_2_reg_1295;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter2_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter3_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter4_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter5_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter6_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter7_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter8_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter9_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter10_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter11_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter12_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter13_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter14_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter15_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter16_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter17_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter18_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter19_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter20_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter21_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter22_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter23_reg;
reg   [5:0] add_ln169_2_reg_1295_pp0_iter24_reg;
wire   [5:0] add_ln169_6_fu_611_p2;
reg   [5:0] add_ln169_6_reg_1306;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter2_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter3_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter4_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter5_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter6_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter7_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter8_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter9_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter10_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter11_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter12_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter13_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter14_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter15_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter16_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter17_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter18_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter19_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter20_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter21_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter22_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter23_reg;
reg   [5:0] add_ln169_6_reg_1306_pp0_iter24_reg;
reg   [57:0] trunc_ln169_8_reg_1311;
wire   [5:0] add_ln169_8_fu_649_p2;
reg   [5:0] add_ln169_8_reg_1316;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter2_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter3_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter4_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter5_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter6_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter7_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter8_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter9_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter10_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter11_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter12_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter13_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter14_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter15_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter16_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter17_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter18_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter19_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter20_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter21_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter22_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter23_reg;
reg   [5:0] add_ln169_8_reg_1316_pp0_iter24_reg;
wire   [0:0] icmp_ln174_fu_654_p2;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter2_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter3_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter4_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter5_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter6_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter7_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter8_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter9_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter10_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter11_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter12_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter13_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter14_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter15_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter16_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter17_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter18_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter19_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter20_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter21_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter22_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter23_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter24_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter25_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter26_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter27_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter28_reg;
reg   [0:0] icmp_ln174_reg_1321_pp0_iter29_reg;
reg   [511:0] gmem_addr_1_read_reg_1332;
wire   [31:0] r_fu_707_p1;
reg   [511:0] gmem_addr_2_read_reg_1342;
wire   [31:0] g_fu_728_p1;
reg   [511:0] gmem_addr_3_read_reg_1352;
wire   [31:0] b_fu_749_p1;
wire   [63:0] grp_fu_290_p1;
wire   [63:0] grp_fu_282_p2;
reg   [63:0] mul_reg_1377;
reg   [63:0] mul2_reg_1387;
wire   [63:0] grp_fu_276_p2;
wire   [63:0] dc_fu_272_p1;
reg   [63:0] dc_reg_1397;
wire   [63:0] data_V_fu_754_p1;
reg   [63:0] data_V_reg_1402;
reg   [0:0] p_Result_s_reg_1407;
reg   [10:0] xs_exp_V_4_reg_1415;
wire   [51:0] xs_sig_V_3_fu_776_p1;
reg   [51:0] xs_sig_V_3_reg_1423;
wire   [62:0] trunc_ln368_fu_795_p1;
reg   [62:0] trunc_ln368_reg_1434;
reg   [0:0] p_Result_4_reg_1439;
wire   [51:0] p_Result_5_fu_988_p1;
reg   [51:0] p_Result_5_reg_1444;
wire   [11:0] add_ln515_fu_996_p2;
reg   [11:0] add_ln515_reg_1449;
reg   [0:0] isNeg_reg_1454;
wire   [10:0] sub_ln1512_fu_1010_p2;
reg   [10:0] sub_ln1512_reg_1460;
wire   [479:0] select_ln165_2_fu_1024_p3;
reg   [479:0] select_ln165_2_reg_1470;
wire   [31:0] result_V_fu_1108_p3;
reg   [31:0] result_V_reg_1476;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter30_stage0;
reg    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln541_fu_790_p1;
wire  signed [63:0] sext_ln169_fu_505_p1;
wire  signed [63:0] sext_ln169_1_fu_601_p1;
wire  signed [63:0] sext_ln169_2_fu_681_p1;
reg    ap_block_pp0_stage1_01001;
reg   [479:0] phi_ln174_fu_174;
wire   [479:0] select_ln174_fu_1138_p3;
wire    ap_loop_init;
reg   [10:0] jj_fu_178;
wire   [10:0] add_ln167_1_fu_666_p2;
reg   [9:0] j_fu_182;
wire   [9:0] add_ln167_fu_660_p2;
reg   [9:0] i_fu_186;
wire   [9:0] select_ln165_4_fu_497_p3;
reg   [9:0] ap_sig_allocacmp_i_1;
reg   [18:0] indvar_flatten_fu_190;
wire   [18:0] add_ln165_fu_474_p2;
reg   [18:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] gray_fu_269_p1;
reg   [63:0] grp_fu_276_p0;
reg   [63:0] grp_fu_276_p1;
reg   [63:0] grp_fu_282_p1;
reg   [31:0] grp_fu_290_p0;
wire   [19:0] shl_ln_fu_349_p3;
wire   [17:0] shl_ln167_1_fu_360_p3;
wire   [20:0] zext_ln167_fu_356_p1;
wire   [20:0] zext_ln167_1_fu_367_p1;
wire   [19:0] shl_ln167_mid1_fu_397_p3;
wire   [17:0] shl_ln167_1_mid1_fu_408_p3;
wire   [20:0] zext_ln167_2_fu_404_p1;
wire   [20:0] zext_ln167_3_fu_415_p1;
wire   [20:0] sub_ln169_1_fu_419_p2;
wire   [20:0] sub_ln169_fu_371_p2;
wire   [20:0] zext_ln169_1_fu_433_p1;
wire   [20:0] add_ln169_fu_437_p2;
wire   [22:0] tmp_4_fu_443_p3;
wire  signed [63:0] sext_ln169_3_fu_451_p1;
wire   [63:0] add_ln169_1_fu_459_p2;
wire   [20:0] or_ln165_fu_479_p2;
wire   [20:0] or_ln165_1_fu_488_p2;
wire   [21:0] zext_ln169_fu_502_p1;
wire  signed [21:0] sext_ln165_1_fu_484_p1;
wire   [21:0] add_ln169_3_fu_515_p2;
wire   [23:0] tmp_6_fu_521_p3;
wire  signed [63:0] sext_ln169_4_fu_529_p1;
wire   [63:0] add_ln169_4_fu_537_p2;
wire  signed [21:0] sext_ln165_2_fu_493_p1;
wire   [9:0] select_ln165_fu_572_p3;
wire   [5:0] trunc_ln169_1_fu_582_p3;
wire   [5:0] trunc_ln169_4_fu_594_p3;
wire   [23:0] tmp_8_fu_616_p3;
wire  signed [63:0] sext_ln169_5_fu_623_p1;
wire   [63:0] add_ln169_5_fu_634_p2;
wire   [5:0] trunc_ln169_7_fu_627_p3;
wire   [3:0] empty_21_fu_578_p1;
wire   [8:0] shl_ln169_1_fu_691_p3;
wire   [511:0] zext_ln169_2_fu_698_p1;
wire   [511:0] lshr_ln169_fu_702_p2;
wire   [8:0] shl_ln169_3_fu_712_p3;
wire   [511:0] zext_ln169_3_fu_719_p1;
wire   [511:0] lshr_ln169_1_fu_723_p2;
wire   [8:0] shl_ln169_5_fu_733_p3;
wire   [511:0] zext_ln169_4_fu_740_p1;
wire   [511:0] lshr_ln169_2_fu_744_p2;
wire   [5:0] index_fu_780_p4;
wire   [63:0] zext_ln28_fu_816_p1;
wire   [63:0] p_Result_2_fu_820_p3;
wire   [63:0] data_V_1_fu_827_p2;
wire   [63:0] and_ln779_fu_847_p2;
wire   [10:0] xs_exp_V_fu_833_p4;
wire   [51:0] xs_sig_V_fu_843_p1;
wire   [51:0] xs_sig_V_1_fu_866_p3;
wire   [51:0] xor_ln1497_fu_872_p2;
wire   [0:0] xs_sign_V_1_fu_852_p3;
wire   [10:0] xs_exp_V_5_fu_860_p3;
wire   [51:0] xs_sig_V_4_fu_878_p2;
wire   [0:0] icmp_ln1035_fu_799_p2;
wire   [0:0] icmp_ln1035_1_fu_804_p2;
wire   [0:0] or_ln1035_fu_894_p2;
wire   [63:0] p_Result_1_fu_809_p3;
wire   [63:0] p_Result_3_fu_884_p4;
wire   [63:0] select_ln1035_fu_900_p3;
wire   [0:0] icmp_ln19_1_fu_917_p2;
wire   [0:0] icmp_ln19_fu_912_p2;
wire   [0:0] or_ln19_fu_922_p2;
wire   [0:0] and_ln19_fu_928_p2;
wire   [0:0] and_ln19_1_fu_933_p2;
wire   [63:0] bitcast_ln1035_fu_908_p1;
wire   [0:0] xor_ln1035_fu_947_p2;
wire   [0:0] and_ln1035_fu_953_p2;
wire   [63:0] select_ln19_fu_939_p3;
wire   [63:0] dc_1_fu_959_p3;
wire   [63:0] data_V_2_fu_966_p1;
wire   [10:0] xs_exp_V_3_fu_978_p4;
wire   [11:0] zext_ln515_fu_992_p1;
wire   [53:0] mantissa_fu_1031_p4;
wire  signed [11:0] sext_ln1512_fu_1044_p1;
wire   [11:0] ush_fu_1047_p3;
wire  signed [31:0] sext_ln1488_fu_1053_p1;
wire   [136:0] zext_ln15_fu_1040_p1;
wire   [136:0] zext_ln1488_fu_1057_p1;
wire   [136:0] r_V_fu_1061_p2;
wire   [0:0] tmp_fu_1073_p3;
wire   [136:0] r_V_1_fu_1067_p2;
wire   [31:0] zext_ln818_fu_1081_p1;
wire   [31:0] tmp_s_fu_1085_p4;
wire   [31:0] val_fu_1095_p3;
wire   [31:0] result_V_2_fu_1102_p2;
wire   [447:0] tmp_1_fu_1122_p4;
wire   [479:0] tmp_2_fu_1131_p3;
reg    grp_fu_276_ce;
reg    grp_fu_282_ce;
reg    grp_fu_290_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to29;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to30;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

rgbToGrayscale_rgbToGrayscale_Pipeline_VITIS_LOOP_165_1_VITIS_LOOP_167_2_mask_table_ROM_AUTObkb #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table_address0),
    .ce0(mask_table_ce0),
    .q0(mask_table_q0)
);

rgbToGrayscale_fptrunc_64ns_32_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_1_no_dsp_1_U1(
    .din0(grp_fu_276_p2),
    .dout(gray_fu_269_p1)
);

rgbToGrayscale_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U2(
    .din0(gray_fu_269_p1),
    .dout(dc_fu_272_p1)
);

rgbToGrayscale_dadd_64ns_64ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_276_p0),
    .din1(grp_fu_276_p1),
    .ce(grp_fu_276_ce),
    .dout(grp_fu_276_p2)
);

rgbToGrayscale_dmul_64ns_64ns_64_4_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_med_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p1),
    .din1(grp_fu_282_p1),
    .ce(grp_fu_282_ce),
    .dout(grp_fu_282_p2)
);

rgbToGrayscale_sitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_4_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p0),
    .ce(grp_fu_290_ce),
    .dout(grp_fu_290_p1)
);

rgbToGrayscale_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter30_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter30 == 1'b1)))) begin
            ap_enable_reg_pp0_iter30 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter29_reg == 1'b0)) | ((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1)))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_186 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd0))) begin
        i_fu_186 <= select_ln165_4_fu_497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_190 <= 19'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd0))) begin
        indvar_flatten_fu_190 <= add_ln165_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_182 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln165_reg_1220 == 1'd0))) begin
            j_fu_182 <= add_ln167_fu_660_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            jj_fu_178 <= 11'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln165_reg_1220 == 1'd0))) begin
            jj_fu_178 <= add_ln167_1_fu_666_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln174_fu_174 <= 480'd0;
    end else if (((icmp_ln165_reg_1220_pp0_iter30_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        phi_ln174_fu_174 <= select_ln174_fu_1138_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_fu_333_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln165_1_reg_1224 <= add_ln165_1_fu_339_p2;
        trunc_ln167_1_reg_1229 <= trunc_ln167_1_fu_345_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln165_reg_1220 == 1'd0))) begin
        add_ln169_2_reg_1295 <= add_ln169_2_fu_589_p2;
        add_ln169_6_reg_1306 <= add_ln169_6_fu_611_p2;
        add_ln169_8_reg_1316 <= add_ln169_8_fu_649_p2;
        icmp_ln174_reg_1321 <= icmp_ln174_fu_654_p2;
        trunc_ln169_8_reg_1311 <= {{add_ln169_5_fu_634_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln169_2_reg_1295_pp0_iter10_reg <= add_ln169_2_reg_1295_pp0_iter9_reg;
        add_ln169_2_reg_1295_pp0_iter11_reg <= add_ln169_2_reg_1295_pp0_iter10_reg;
        add_ln169_2_reg_1295_pp0_iter12_reg <= add_ln169_2_reg_1295_pp0_iter11_reg;
        add_ln169_2_reg_1295_pp0_iter13_reg <= add_ln169_2_reg_1295_pp0_iter12_reg;
        add_ln169_2_reg_1295_pp0_iter14_reg <= add_ln169_2_reg_1295_pp0_iter13_reg;
        add_ln169_2_reg_1295_pp0_iter15_reg <= add_ln169_2_reg_1295_pp0_iter14_reg;
        add_ln169_2_reg_1295_pp0_iter16_reg <= add_ln169_2_reg_1295_pp0_iter15_reg;
        add_ln169_2_reg_1295_pp0_iter17_reg <= add_ln169_2_reg_1295_pp0_iter16_reg;
        add_ln169_2_reg_1295_pp0_iter18_reg <= add_ln169_2_reg_1295_pp0_iter17_reg;
        add_ln169_2_reg_1295_pp0_iter19_reg <= add_ln169_2_reg_1295_pp0_iter18_reg;
        add_ln169_2_reg_1295_pp0_iter20_reg <= add_ln169_2_reg_1295_pp0_iter19_reg;
        add_ln169_2_reg_1295_pp0_iter21_reg <= add_ln169_2_reg_1295_pp0_iter20_reg;
        add_ln169_2_reg_1295_pp0_iter22_reg <= add_ln169_2_reg_1295_pp0_iter21_reg;
        add_ln169_2_reg_1295_pp0_iter23_reg <= add_ln169_2_reg_1295_pp0_iter22_reg;
        add_ln169_2_reg_1295_pp0_iter24_reg <= add_ln169_2_reg_1295_pp0_iter23_reg;
        add_ln169_2_reg_1295_pp0_iter2_reg <= add_ln169_2_reg_1295;
        add_ln169_2_reg_1295_pp0_iter3_reg <= add_ln169_2_reg_1295_pp0_iter2_reg;
        add_ln169_2_reg_1295_pp0_iter4_reg <= add_ln169_2_reg_1295_pp0_iter3_reg;
        add_ln169_2_reg_1295_pp0_iter5_reg <= add_ln169_2_reg_1295_pp0_iter4_reg;
        add_ln169_2_reg_1295_pp0_iter6_reg <= add_ln169_2_reg_1295_pp0_iter5_reg;
        add_ln169_2_reg_1295_pp0_iter7_reg <= add_ln169_2_reg_1295_pp0_iter6_reg;
        add_ln169_2_reg_1295_pp0_iter8_reg <= add_ln169_2_reg_1295_pp0_iter7_reg;
        add_ln169_2_reg_1295_pp0_iter9_reg <= add_ln169_2_reg_1295_pp0_iter8_reg;
        add_ln169_6_reg_1306_pp0_iter10_reg <= add_ln169_6_reg_1306_pp0_iter9_reg;
        add_ln169_6_reg_1306_pp0_iter11_reg <= add_ln169_6_reg_1306_pp0_iter10_reg;
        add_ln169_6_reg_1306_pp0_iter12_reg <= add_ln169_6_reg_1306_pp0_iter11_reg;
        add_ln169_6_reg_1306_pp0_iter13_reg <= add_ln169_6_reg_1306_pp0_iter12_reg;
        add_ln169_6_reg_1306_pp0_iter14_reg <= add_ln169_6_reg_1306_pp0_iter13_reg;
        add_ln169_6_reg_1306_pp0_iter15_reg <= add_ln169_6_reg_1306_pp0_iter14_reg;
        add_ln169_6_reg_1306_pp0_iter16_reg <= add_ln169_6_reg_1306_pp0_iter15_reg;
        add_ln169_6_reg_1306_pp0_iter17_reg <= add_ln169_6_reg_1306_pp0_iter16_reg;
        add_ln169_6_reg_1306_pp0_iter18_reg <= add_ln169_6_reg_1306_pp0_iter17_reg;
        add_ln169_6_reg_1306_pp0_iter19_reg <= add_ln169_6_reg_1306_pp0_iter18_reg;
        add_ln169_6_reg_1306_pp0_iter20_reg <= add_ln169_6_reg_1306_pp0_iter19_reg;
        add_ln169_6_reg_1306_pp0_iter21_reg <= add_ln169_6_reg_1306_pp0_iter20_reg;
        add_ln169_6_reg_1306_pp0_iter22_reg <= add_ln169_6_reg_1306_pp0_iter21_reg;
        add_ln169_6_reg_1306_pp0_iter23_reg <= add_ln169_6_reg_1306_pp0_iter22_reg;
        add_ln169_6_reg_1306_pp0_iter24_reg <= add_ln169_6_reg_1306_pp0_iter23_reg;
        add_ln169_6_reg_1306_pp0_iter2_reg <= add_ln169_6_reg_1306;
        add_ln169_6_reg_1306_pp0_iter3_reg <= add_ln169_6_reg_1306_pp0_iter2_reg;
        add_ln169_6_reg_1306_pp0_iter4_reg <= add_ln169_6_reg_1306_pp0_iter3_reg;
        add_ln169_6_reg_1306_pp0_iter5_reg <= add_ln169_6_reg_1306_pp0_iter4_reg;
        add_ln169_6_reg_1306_pp0_iter6_reg <= add_ln169_6_reg_1306_pp0_iter5_reg;
        add_ln169_6_reg_1306_pp0_iter7_reg <= add_ln169_6_reg_1306_pp0_iter6_reg;
        add_ln169_6_reg_1306_pp0_iter8_reg <= add_ln169_6_reg_1306_pp0_iter7_reg;
        add_ln169_6_reg_1306_pp0_iter9_reg <= add_ln169_6_reg_1306_pp0_iter8_reg;
        add_ln169_8_reg_1316_pp0_iter10_reg <= add_ln169_8_reg_1316_pp0_iter9_reg;
        add_ln169_8_reg_1316_pp0_iter11_reg <= add_ln169_8_reg_1316_pp0_iter10_reg;
        add_ln169_8_reg_1316_pp0_iter12_reg <= add_ln169_8_reg_1316_pp0_iter11_reg;
        add_ln169_8_reg_1316_pp0_iter13_reg <= add_ln169_8_reg_1316_pp0_iter12_reg;
        add_ln169_8_reg_1316_pp0_iter14_reg <= add_ln169_8_reg_1316_pp0_iter13_reg;
        add_ln169_8_reg_1316_pp0_iter15_reg <= add_ln169_8_reg_1316_pp0_iter14_reg;
        add_ln169_8_reg_1316_pp0_iter16_reg <= add_ln169_8_reg_1316_pp0_iter15_reg;
        add_ln169_8_reg_1316_pp0_iter17_reg <= add_ln169_8_reg_1316_pp0_iter16_reg;
        add_ln169_8_reg_1316_pp0_iter18_reg <= add_ln169_8_reg_1316_pp0_iter17_reg;
        add_ln169_8_reg_1316_pp0_iter19_reg <= add_ln169_8_reg_1316_pp0_iter18_reg;
        add_ln169_8_reg_1316_pp0_iter20_reg <= add_ln169_8_reg_1316_pp0_iter19_reg;
        add_ln169_8_reg_1316_pp0_iter21_reg <= add_ln169_8_reg_1316_pp0_iter20_reg;
        add_ln169_8_reg_1316_pp0_iter22_reg <= add_ln169_8_reg_1316_pp0_iter21_reg;
        add_ln169_8_reg_1316_pp0_iter23_reg <= add_ln169_8_reg_1316_pp0_iter22_reg;
        add_ln169_8_reg_1316_pp0_iter24_reg <= add_ln169_8_reg_1316_pp0_iter23_reg;
        add_ln169_8_reg_1316_pp0_iter2_reg <= add_ln169_8_reg_1316;
        add_ln169_8_reg_1316_pp0_iter3_reg <= add_ln169_8_reg_1316_pp0_iter2_reg;
        add_ln169_8_reg_1316_pp0_iter4_reg <= add_ln169_8_reg_1316_pp0_iter3_reg;
        add_ln169_8_reg_1316_pp0_iter5_reg <= add_ln169_8_reg_1316_pp0_iter4_reg;
        add_ln169_8_reg_1316_pp0_iter6_reg <= add_ln169_8_reg_1316_pp0_iter5_reg;
        add_ln169_8_reg_1316_pp0_iter7_reg <= add_ln169_8_reg_1316_pp0_iter6_reg;
        add_ln169_8_reg_1316_pp0_iter8_reg <= add_ln169_8_reg_1316_pp0_iter7_reg;
        add_ln169_8_reg_1316_pp0_iter9_reg <= add_ln169_8_reg_1316_pp0_iter8_reg;
        i_1_reg_1204 <= ap_sig_allocacmp_i_1;
        icmp_ln165_reg_1220 <= icmp_ln165_fu_333_p2;
        icmp_ln165_reg_1220_pp0_iter10_reg <= icmp_ln165_reg_1220_pp0_iter9_reg;
        icmp_ln165_reg_1220_pp0_iter11_reg <= icmp_ln165_reg_1220_pp0_iter10_reg;
        icmp_ln165_reg_1220_pp0_iter12_reg <= icmp_ln165_reg_1220_pp0_iter11_reg;
        icmp_ln165_reg_1220_pp0_iter13_reg <= icmp_ln165_reg_1220_pp0_iter12_reg;
        icmp_ln165_reg_1220_pp0_iter14_reg <= icmp_ln165_reg_1220_pp0_iter13_reg;
        icmp_ln165_reg_1220_pp0_iter15_reg <= icmp_ln165_reg_1220_pp0_iter14_reg;
        icmp_ln165_reg_1220_pp0_iter16_reg <= icmp_ln165_reg_1220_pp0_iter15_reg;
        icmp_ln165_reg_1220_pp0_iter17_reg <= icmp_ln165_reg_1220_pp0_iter16_reg;
        icmp_ln165_reg_1220_pp0_iter18_reg <= icmp_ln165_reg_1220_pp0_iter17_reg;
        icmp_ln165_reg_1220_pp0_iter19_reg <= icmp_ln165_reg_1220_pp0_iter18_reg;
        icmp_ln165_reg_1220_pp0_iter1_reg <= icmp_ln165_reg_1220;
        icmp_ln165_reg_1220_pp0_iter20_reg <= icmp_ln165_reg_1220_pp0_iter19_reg;
        icmp_ln165_reg_1220_pp0_iter21_reg <= icmp_ln165_reg_1220_pp0_iter20_reg;
        icmp_ln165_reg_1220_pp0_iter22_reg <= icmp_ln165_reg_1220_pp0_iter21_reg;
        icmp_ln165_reg_1220_pp0_iter23_reg <= icmp_ln165_reg_1220_pp0_iter22_reg;
        icmp_ln165_reg_1220_pp0_iter24_reg <= icmp_ln165_reg_1220_pp0_iter23_reg;
        icmp_ln165_reg_1220_pp0_iter25_reg <= icmp_ln165_reg_1220_pp0_iter24_reg;
        icmp_ln165_reg_1220_pp0_iter26_reg <= icmp_ln165_reg_1220_pp0_iter25_reg;
        icmp_ln165_reg_1220_pp0_iter27_reg <= icmp_ln165_reg_1220_pp0_iter26_reg;
        icmp_ln165_reg_1220_pp0_iter28_reg <= icmp_ln165_reg_1220_pp0_iter27_reg;
        icmp_ln165_reg_1220_pp0_iter29_reg <= icmp_ln165_reg_1220_pp0_iter28_reg;
        icmp_ln165_reg_1220_pp0_iter2_reg <= icmp_ln165_reg_1220_pp0_iter1_reg;
        icmp_ln165_reg_1220_pp0_iter30_reg <= icmp_ln165_reg_1220_pp0_iter29_reg;
        icmp_ln165_reg_1220_pp0_iter3_reg <= icmp_ln165_reg_1220_pp0_iter2_reg;
        icmp_ln165_reg_1220_pp0_iter4_reg <= icmp_ln165_reg_1220_pp0_iter3_reg;
        icmp_ln165_reg_1220_pp0_iter5_reg <= icmp_ln165_reg_1220_pp0_iter4_reg;
        icmp_ln165_reg_1220_pp0_iter6_reg <= icmp_ln165_reg_1220_pp0_iter5_reg;
        icmp_ln165_reg_1220_pp0_iter7_reg <= icmp_ln165_reg_1220_pp0_iter6_reg;
        icmp_ln165_reg_1220_pp0_iter8_reg <= icmp_ln165_reg_1220_pp0_iter7_reg;
        icmp_ln165_reg_1220_pp0_iter9_reg <= icmp_ln165_reg_1220_pp0_iter8_reg;
        icmp_ln174_reg_1321_pp0_iter10_reg <= icmp_ln174_reg_1321_pp0_iter9_reg;
        icmp_ln174_reg_1321_pp0_iter11_reg <= icmp_ln174_reg_1321_pp0_iter10_reg;
        icmp_ln174_reg_1321_pp0_iter12_reg <= icmp_ln174_reg_1321_pp0_iter11_reg;
        icmp_ln174_reg_1321_pp0_iter13_reg <= icmp_ln174_reg_1321_pp0_iter12_reg;
        icmp_ln174_reg_1321_pp0_iter14_reg <= icmp_ln174_reg_1321_pp0_iter13_reg;
        icmp_ln174_reg_1321_pp0_iter15_reg <= icmp_ln174_reg_1321_pp0_iter14_reg;
        icmp_ln174_reg_1321_pp0_iter16_reg <= icmp_ln174_reg_1321_pp0_iter15_reg;
        icmp_ln174_reg_1321_pp0_iter17_reg <= icmp_ln174_reg_1321_pp0_iter16_reg;
        icmp_ln174_reg_1321_pp0_iter18_reg <= icmp_ln174_reg_1321_pp0_iter17_reg;
        icmp_ln174_reg_1321_pp0_iter19_reg <= icmp_ln174_reg_1321_pp0_iter18_reg;
        icmp_ln174_reg_1321_pp0_iter20_reg <= icmp_ln174_reg_1321_pp0_iter19_reg;
        icmp_ln174_reg_1321_pp0_iter21_reg <= icmp_ln174_reg_1321_pp0_iter20_reg;
        icmp_ln174_reg_1321_pp0_iter22_reg <= icmp_ln174_reg_1321_pp0_iter21_reg;
        icmp_ln174_reg_1321_pp0_iter23_reg <= icmp_ln174_reg_1321_pp0_iter22_reg;
        icmp_ln174_reg_1321_pp0_iter24_reg <= icmp_ln174_reg_1321_pp0_iter23_reg;
        icmp_ln174_reg_1321_pp0_iter25_reg <= icmp_ln174_reg_1321_pp0_iter24_reg;
        icmp_ln174_reg_1321_pp0_iter26_reg <= icmp_ln174_reg_1321_pp0_iter25_reg;
        icmp_ln174_reg_1321_pp0_iter27_reg <= icmp_ln174_reg_1321_pp0_iter26_reg;
        icmp_ln174_reg_1321_pp0_iter28_reg <= icmp_ln174_reg_1321_pp0_iter27_reg;
        icmp_ln174_reg_1321_pp0_iter29_reg <= icmp_ln174_reg_1321_pp0_iter28_reg;
        icmp_ln174_reg_1321_pp0_iter2_reg <= icmp_ln174_reg_1321;
        icmp_ln174_reg_1321_pp0_iter30_reg <= icmp_ln174_reg_1321_pp0_iter29_reg;
        icmp_ln174_reg_1321_pp0_iter3_reg <= icmp_ln174_reg_1321_pp0_iter2_reg;
        icmp_ln174_reg_1321_pp0_iter4_reg <= icmp_ln174_reg_1321_pp0_iter3_reg;
        icmp_ln174_reg_1321_pp0_iter5_reg <= icmp_ln174_reg_1321_pp0_iter4_reg;
        icmp_ln174_reg_1321_pp0_iter6_reg <= icmp_ln174_reg_1321_pp0_iter5_reg;
        icmp_ln174_reg_1321_pp0_iter7_reg <= icmp_ln174_reg_1321_pp0_iter6_reg;
        icmp_ln174_reg_1321_pp0_iter8_reg <= icmp_ln174_reg_1321_pp0_iter7_reg;
        icmp_ln174_reg_1321_pp0_iter9_reg <= icmp_ln174_reg_1321_pp0_iter8_reg;
        indvar_flatten_load_reg_1209 <= ap_sig_allocacmp_indvar_flatten_load;
        trunc_ln167_reg_1214 <= trunc_ln167_fu_329_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd0))) begin
        add_ln169_7_reg_1285 <= add_ln169_7_fu_552_p2;
        trunc_ln169_10_reg_1290 <= trunc_ln169_10_fu_558_p1;
        trunc_ln169_5_reg_1280 <= {{add_ln169_4_fu_537_p2[63:6]}};
        trunc_ln169_6_reg_1275 <= trunc_ln169_6_fu_533_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_1220_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln515_reg_1449 <= add_ln515_fu_996_p2;
        isNeg_reg_1454 <= add_ln515_fu_996_p2[32'd11];
        p_Result_4_reg_1439 <= data_V_2_fu_966_p1[32'd63];
        p_Result_5_reg_1444 <= p_Result_5_fu_988_p1;
        sub_ln1512_reg_1460 <= sub_ln1512_fu_1010_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_1220_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_reg_1402 <= data_V_fu_754_p1;
        dc_reg_1397 <= dc_fu_272_p1;
        p_Result_s_reg_1407 <= data_V_fu_754_p1[32'd63];
        trunc_ln368_reg_1434 <= trunc_ln368_fu_795_p1;
        xs_exp_V_4_reg_1415 <= {{data_V_fu_754_p1[62:52]}};
        xs_sig_V_3_reg_1423 <= xs_sig_V_3_fu_776_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_1220_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_1_read_reg_1332 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_addr_2_read_reg_1342 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gmem_addr_3_read_reg_1352 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln165_reg_1220 == 1'd0))) begin
        icmp_ln167_reg_1240 <= icmp_ln167_fu_383_p2;
        j_load_reg_1235 <= j_fu_182;
        select_ln165_1_reg_1247 <= select_ln165_1_fu_389_p3;
        select_ln165_3_reg_1253[20 : 9] <= select_ln165_3_fu_425_p3[20 : 9];
        trunc_ln169_2_reg_1264 <= {{add_ln169_1_fu_459_p2[63:6]}};
        trunc_ln169_reg_1259 <= trunc_ln169_fu_455_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln167_reg_1240_pp0_iter10_reg <= icmp_ln167_reg_1240_pp0_iter9_reg;
        icmp_ln167_reg_1240_pp0_iter11_reg <= icmp_ln167_reg_1240_pp0_iter10_reg;
        icmp_ln167_reg_1240_pp0_iter12_reg <= icmp_ln167_reg_1240_pp0_iter11_reg;
        icmp_ln167_reg_1240_pp0_iter13_reg <= icmp_ln167_reg_1240_pp0_iter12_reg;
        icmp_ln167_reg_1240_pp0_iter14_reg <= icmp_ln167_reg_1240_pp0_iter13_reg;
        icmp_ln167_reg_1240_pp0_iter15_reg <= icmp_ln167_reg_1240_pp0_iter14_reg;
        icmp_ln167_reg_1240_pp0_iter16_reg <= icmp_ln167_reg_1240_pp0_iter15_reg;
        icmp_ln167_reg_1240_pp0_iter17_reg <= icmp_ln167_reg_1240_pp0_iter16_reg;
        icmp_ln167_reg_1240_pp0_iter18_reg <= icmp_ln167_reg_1240_pp0_iter17_reg;
        icmp_ln167_reg_1240_pp0_iter19_reg <= icmp_ln167_reg_1240_pp0_iter18_reg;
        icmp_ln167_reg_1240_pp0_iter1_reg <= icmp_ln167_reg_1240;
        icmp_ln167_reg_1240_pp0_iter20_reg <= icmp_ln167_reg_1240_pp0_iter19_reg;
        icmp_ln167_reg_1240_pp0_iter21_reg <= icmp_ln167_reg_1240_pp0_iter20_reg;
        icmp_ln167_reg_1240_pp0_iter22_reg <= icmp_ln167_reg_1240_pp0_iter21_reg;
        icmp_ln167_reg_1240_pp0_iter23_reg <= icmp_ln167_reg_1240_pp0_iter22_reg;
        icmp_ln167_reg_1240_pp0_iter24_reg <= icmp_ln167_reg_1240_pp0_iter23_reg;
        icmp_ln167_reg_1240_pp0_iter25_reg <= icmp_ln167_reg_1240_pp0_iter24_reg;
        icmp_ln167_reg_1240_pp0_iter26_reg <= icmp_ln167_reg_1240_pp0_iter25_reg;
        icmp_ln167_reg_1240_pp0_iter27_reg <= icmp_ln167_reg_1240_pp0_iter26_reg;
        icmp_ln167_reg_1240_pp0_iter28_reg <= icmp_ln167_reg_1240_pp0_iter27_reg;
        icmp_ln167_reg_1240_pp0_iter29_reg <= icmp_ln167_reg_1240_pp0_iter28_reg;
        icmp_ln167_reg_1240_pp0_iter2_reg <= icmp_ln167_reg_1240_pp0_iter1_reg;
        icmp_ln167_reg_1240_pp0_iter3_reg <= icmp_ln167_reg_1240_pp0_iter2_reg;
        icmp_ln167_reg_1240_pp0_iter4_reg <= icmp_ln167_reg_1240_pp0_iter3_reg;
        icmp_ln167_reg_1240_pp0_iter5_reg <= icmp_ln167_reg_1240_pp0_iter4_reg;
        icmp_ln167_reg_1240_pp0_iter6_reg <= icmp_ln167_reg_1240_pp0_iter5_reg;
        icmp_ln167_reg_1240_pp0_iter7_reg <= icmp_ln167_reg_1240_pp0_iter6_reg;
        icmp_ln167_reg_1240_pp0_iter8_reg <= icmp_ln167_reg_1240_pp0_iter7_reg;
        icmp_ln167_reg_1240_pp0_iter9_reg <= icmp_ln167_reg_1240_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_1220_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        mul2_reg_1387 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_reg_1377 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_1220_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_V_reg_1476 <= result_V_fu_1108_p3;
        select_ln165_2_reg_1470 <= select_ln165_2_fu_1024_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_1220_pp0_iter29_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_condition_exit_pp0_iter30_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter30_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter30_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to29 = 1'b1;
    end else begin
        ap_idle_pp0_0to29 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to30 = 1'b1;
    end else begin
        ap_idle_pp0_1to30 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_186;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 19'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_190;
    end
end

always @ (*) begin
    if ((((icmp_ln165_reg_1220_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln165_reg_1220 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln174_reg_1321_pp0_iter30_reg == 1'd1) & (icmp_ln165_reg_1220_pp0_iter30_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_276_ce = 1'b1;
    end else begin
        grp_fu_276_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_276_p0 = grp_fu_276_p2;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_276_p0 = mul_reg_1377;
    end else begin
        grp_fu_276_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        grp_fu_276_p1 = mul2_reg_1387;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_276_p1 = grp_fu_282_p2;
    end else begin
        grp_fu_276_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_282_ce = 1'b1;
    end else begin
        grp_fu_282_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_282_p1 = 64'd4592878986383488713;
    end else if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_282_p1 = 64'd4603462445507809378;
    end else if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_282_p1 = 64'd4599057925072241033;
    end else begin
        grp_fu_282_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_290_p0 = b_fu_749_p1;
    end else if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_290_p0 = g_fu_728_p1;
    end else if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_290_p0 = r_fu_707_p1;
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln165_reg_1220_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_gmem_ARADDR = sext_ln169_2_fu_681_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln165_reg_1220 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln169_1_fu_601_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln169_fu_505_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln165_reg_1220_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln165_reg_1220 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln165_reg_1220 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op511_write_state92 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        mask_table_ce0 = 1'b1;
    end else begin
        mask_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter30_stage0) & (ap_idle_pp0_0to29 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to30 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln165_1_fu_339_p2 = (ap_sig_allocacmp_i_1 + 10'd1);

assign add_ln165_fu_474_p2 = (indvar_flatten_load_reg_1209 + 19'd1);

assign add_ln167_1_fu_666_p2 = (select_ln165_1_reg_1247 + 11'd3);

assign add_ln167_fu_660_p2 = (select_ln165_fu_572_p3 + 10'd1);

assign add_ln169_1_fu_459_p2 = ($signed(sext_ln169_3_fu_451_p1) + $signed(input_image));

assign add_ln169_2_fu_589_p2 = (trunc_ln169_1_fu_582_p3 + trunc_ln1);

assign add_ln169_3_fu_515_p2 = ($signed(zext_ln169_fu_502_p1) + $signed(sext_ln165_1_fu_484_p1));

assign add_ln169_4_fu_537_p2 = ($signed(sext_ln169_4_fu_529_p1) + $signed(input_image));

assign add_ln169_5_fu_634_p2 = ($signed(sext_ln169_5_fu_623_p1) + $signed(input_image));

assign add_ln169_6_fu_611_p2 = (trunc_ln169_4_fu_594_p3 + trunc_ln1);

assign add_ln169_7_fu_552_p2 = ($signed(zext_ln169_fu_502_p1) + $signed(sext_ln165_2_fu_493_p1));

assign add_ln169_8_fu_649_p2 = (trunc_ln169_7_fu_627_p3 + trunc_ln1);

assign add_ln169_fu_437_p2 = (zext_ln169_1_fu_433_p1 + select_ln165_3_fu_425_p3);

assign add_ln515_fu_996_p2 = ($signed(zext_ln515_fu_992_p1) + $signed(12'd3073));

assign and_ln1035_fu_953_p2 = (xor_ln1035_fu_947_p2 & icmp_ln1035_1_fu_804_p2);

assign and_ln19_1_fu_933_p2 = (icmp_ln1035_fu_799_p2 & and_ln19_fu_928_p2);

assign and_ln19_fu_928_p2 = (p_Result_s_reg_1407 & or_ln19_fu_922_p2);

assign and_ln779_fu_847_p2 = (data_V_reg_1402 & data_V_1_fu_827_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter23_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter23_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state92_io) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state92_io) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter24 == 1'b1) & (icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln165_reg_1220 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln165_reg_1220 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((icmp_ln165_reg_1220_pp0_iter1_reg == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage2_iter23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp0_stage0_iter24 = ((icmp_ln165_reg_1220_pp0_iter23_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter24 = ((icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter24 = ((icmp_ln165_reg_1220_pp0_iter24_reg == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state76_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage2_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage2_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage2_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage2_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage2_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state92_io = ((ap_predicate_op511_write_state92 == 1'b1) & (m_axi_gmem_WREADY == 1'b0));
end

assign ap_block_state92_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

always @ (*) begin
    ap_predicate_op511_write_state92 = ((icmp_ln174_reg_1321_pp0_iter30_reg == 1'd1) & (icmp_ln165_reg_1220_pp0_iter30_reg == 1'd0));
end

assign b_fu_749_p1 = lshr_ln169_2_fu_744_p2[31:0];

assign bitcast_ln1035_fu_908_p1 = select_ln1035_fu_900_p3;

assign data_V_1_fu_827_p2 = (zext_ln28_fu_816_p1 + p_Result_2_fu_820_p3);

assign data_V_2_fu_966_p1 = dc_1_fu_959_p3;

assign data_V_fu_754_p1 = dc_fu_272_p1;

assign dc_1_fu_959_p3 = ((and_ln1035_fu_953_p2[0:0] == 1'b1) ? dc_reg_1397 : select_ln19_fu_939_p3);

assign empty_21_fu_578_p1 = select_ln165_fu_572_p3[3:0];

assign g_fu_728_p1 = lshr_ln169_1_fu_723_p2[31:0];

assign icmp_ln1035_1_fu_804_p2 = ((xs_exp_V_4_reg_1415 > 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_799_p2 = ((xs_exp_V_4_reg_1415 < 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_333_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_383_p2 = ((j_fu_182 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_654_p2 = ((empty_21_fu_578_p1 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_917_p2 = ((xs_exp_V_4_reg_1415 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_912_p2 = ((xs_sig_V_3_reg_1423 != 52'd0) ? 1'b1 : 1'b0);

assign index_fu_780_p4 = {{data_V_fu_754_p1[57:52]}};

assign lshr_ln169_1_fu_723_p2 = gmem_addr_2_read_reg_1342 >> zext_ln169_3_fu_719_p1;

assign lshr_ln169_2_fu_744_p2 = gmem_addr_3_read_reg_1352 >> zext_ln169_4_fu_740_p1;

assign lshr_ln169_fu_702_p2 = gmem_addr_1_read_reg_1332 >> zext_ln169_2_fu_698_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = {{result_V_reg_1476}, {select_ln165_2_reg_1470}};

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem_WUSER = 1'd0;

assign mantissa_fu_1031_p4 = {{{{1'd1}, {p_Result_5_reg_1444}}}, {1'd0}};

assign mask_table_address0 = zext_ln541_fu_790_p1;

assign or_ln1035_fu_894_p2 = (icmp_ln1035_fu_799_p2 | icmp_ln1035_1_fu_804_p2);

assign or_ln165_1_fu_488_p2 = (select_ln165_3_reg_1253 | 21'd2);

assign or_ln165_fu_479_p2 = (select_ln165_3_reg_1253 | 21'd1);

assign or_ln19_fu_922_p2 = (icmp_ln19_fu_912_p2 | icmp_ln19_1_fu_917_p2);

assign p_Result_1_fu_809_p3 = {{p_Result_s_reg_1407}, {63'd0}};

assign p_Result_2_fu_820_p3 = {{1'd1}, {trunc_ln368_reg_1434}};

assign p_Result_3_fu_884_p4 = {{{xs_sign_V_1_fu_852_p3}, {xs_exp_V_5_fu_860_p3}}, {xs_sig_V_4_fu_878_p2}};

assign p_Result_5_fu_988_p1 = data_V_2_fu_966_p1[51:0];

assign r_V_1_fu_1067_p2 = zext_ln15_fu_1040_p1 << zext_ln1488_fu_1057_p1;

assign r_V_fu_1061_p2 = zext_ln15_fu_1040_p1 >> zext_ln1488_fu_1057_p1;

assign r_fu_707_p1 = lshr_ln169_fu_702_p2[31:0];

assign result_V_2_fu_1102_p2 = (32'd0 - val_fu_1095_p3);

assign result_V_fu_1108_p3 = ((p_Result_4_reg_1439[0:0] == 1'b1) ? result_V_2_fu_1102_p2 : val_fu_1095_p3);

assign select_ln1035_fu_900_p3 = ((or_ln1035_fu_894_p2[0:0] == 1'b1) ? p_Result_1_fu_809_p3 : p_Result_3_fu_884_p4);

assign select_ln165_1_fu_389_p3 = ((icmp_ln167_fu_383_p2[0:0] == 1'b1) ? 11'd0 : jj_fu_178);

assign select_ln165_2_fu_1024_p3 = ((icmp_ln167_reg_1240_pp0_iter29_reg[0:0] == 1'b1) ? 480'd0 : phi_ln174_fu_174);

assign select_ln165_3_fu_425_p3 = ((icmp_ln167_fu_383_p2[0:0] == 1'b1) ? sub_ln169_1_fu_419_p2 : sub_ln169_fu_371_p2);

assign select_ln165_4_fu_497_p3 = ((icmp_ln167_reg_1240[0:0] == 1'b1) ? add_ln165_1_reg_1224 : i_1_reg_1204);

assign select_ln165_fu_572_p3 = ((icmp_ln167_reg_1240[0:0] == 1'b1) ? 10'd0 : j_load_reg_1235);

assign select_ln174_fu_1138_p3 = ((icmp_ln174_reg_1321_pp0_iter30_reg[0:0] == 1'b1) ? 480'd0 : tmp_2_fu_1131_p3);

assign select_ln19_fu_939_p3 = ((and_ln19_1_fu_933_p2[0:0] == 1'b1) ? 64'd13830554455654793216 : bitcast_ln1035_fu_908_p1);

assign sext_ln1488_fu_1053_p1 = $signed(ush_fu_1047_p3);

assign sext_ln1512_fu_1044_p1 = $signed(sub_ln1512_reg_1460);

assign sext_ln165_1_fu_484_p1 = $signed(or_ln165_fu_479_p2);

assign sext_ln165_2_fu_493_p1 = $signed(or_ln165_1_fu_488_p2);

assign sext_ln169_1_fu_601_p1 = $signed(trunc_ln169_5_reg_1280);

assign sext_ln169_2_fu_681_p1 = $signed(trunc_ln169_8_reg_1311);

assign sext_ln169_3_fu_451_p1 = $signed(tmp_4_fu_443_p3);

assign sext_ln169_4_fu_529_p1 = $signed(tmp_6_fu_521_p3);

assign sext_ln169_5_fu_623_p1 = $signed(tmp_8_fu_616_p3);

assign sext_ln169_fu_505_p1 = $signed(trunc_ln169_2_reg_1264);

assign shl_ln167_1_fu_360_p3 = {{trunc_ln167_reg_1214}, {9'd0}};

assign shl_ln167_1_mid1_fu_408_p3 = {{trunc_ln167_1_reg_1229}, {9'd0}};

assign shl_ln167_mid1_fu_397_p3 = {{trunc_ln167_1_reg_1229}, {11'd0}};

assign shl_ln169_1_fu_691_p3 = {{add_ln169_2_reg_1295_pp0_iter24_reg}, {3'd0}};

assign shl_ln169_3_fu_712_p3 = {{add_ln169_6_reg_1306_pp0_iter24_reg}, {3'd0}};

assign shl_ln169_5_fu_733_p3 = {{add_ln169_8_reg_1316_pp0_iter24_reg}, {3'd0}};

assign shl_ln_fu_349_p3 = {{trunc_ln167_reg_1214}, {11'd0}};

assign sub_ln1512_fu_1010_p2 = (11'd1023 - xs_exp_V_3_fu_978_p4);

assign sub_ln169_1_fu_419_p2 = (zext_ln167_2_fu_404_p1 - zext_ln167_3_fu_415_p1);

assign sub_ln169_fu_371_p2 = (zext_ln167_fu_356_p1 - zext_ln167_1_fu_367_p1);

assign tmp_1_fu_1122_p4 = {{select_ln165_2_reg_1470[479:32]}};

assign tmp_2_fu_1131_p3 = {{result_V_reg_1476}, {tmp_1_fu_1122_p4}};

assign tmp_4_fu_443_p3 = {{add_ln169_fu_437_p2}, {2'd0}};

assign tmp_6_fu_521_p3 = {{add_ln169_3_fu_515_p2}, {2'd0}};

assign tmp_8_fu_616_p3 = {{add_ln169_7_reg_1285}, {2'd0}};

assign tmp_fu_1073_p3 = r_V_fu_1061_p2[32'd53];

assign tmp_s_fu_1085_p4 = {{r_V_1_fu_1067_p2[84:53]}};

assign trunc_ln167_1_fu_345_p1 = add_ln165_1_fu_339_p2[8:0];

assign trunc_ln167_fu_329_p1 = ap_sig_allocacmp_i_1[8:0];

assign trunc_ln169_10_fu_558_p1 = add_ln169_7_fu_552_p2[3:0];

assign trunc_ln169_1_fu_582_p3 = {{trunc_ln169_reg_1259}, {2'd0}};

assign trunc_ln169_4_fu_594_p3 = {{trunc_ln169_6_reg_1275}, {2'd0}};

assign trunc_ln169_6_fu_533_p1 = add_ln169_3_fu_515_p2[3:0];

assign trunc_ln169_7_fu_627_p3 = {{trunc_ln169_10_reg_1290}, {2'd0}};

assign trunc_ln169_fu_455_p1 = add_ln169_fu_437_p2[3:0];

assign trunc_ln368_fu_795_p1 = data_V_fu_754_p1[62:0];

assign ush_fu_1047_p3 = ((isNeg_reg_1454[0:0] == 1'b1) ? sext_ln1512_fu_1044_p1 : add_ln515_reg_1449);

assign val_fu_1095_p3 = ((isNeg_reg_1454[0:0] == 1'b1) ? zext_ln818_fu_1081_p1 : tmp_s_fu_1085_p4);

assign xor_ln1035_fu_947_p2 = (icmp_ln1035_fu_799_p2 ^ 1'd1);

assign xor_ln1497_fu_872_p2 = (mask_table_q0 ^ 52'd4503599627370495);

assign xs_exp_V_3_fu_978_p4 = {{data_V_2_fu_966_p1[62:52]}};

assign xs_exp_V_5_fu_860_p3 = ((p_Result_s_reg_1407[0:0] == 1'b1) ? xs_exp_V_fu_833_p4 : xs_exp_V_4_reg_1415);

assign xs_exp_V_fu_833_p4 = {{data_V_1_fu_827_p2[62:52]}};

assign xs_sig_V_1_fu_866_p3 = ((p_Result_s_reg_1407[0:0] == 1'b1) ? xs_sig_V_fu_843_p1 : xs_sig_V_3_reg_1423);

assign xs_sig_V_3_fu_776_p1 = data_V_fu_754_p1[51:0];

assign xs_sig_V_4_fu_878_p2 = (xs_sig_V_1_fu_866_p3 & xor_ln1497_fu_872_p2);

assign xs_sig_V_fu_843_p1 = data_V_1_fu_827_p2[51:0];

assign xs_sign_V_1_fu_852_p3 = and_ln779_fu_847_p2[32'd63];

assign zext_ln1488_fu_1057_p1 = $unsigned(sext_ln1488_fu_1053_p1);

assign zext_ln15_fu_1040_p1 = mantissa_fu_1031_p4;

assign zext_ln167_1_fu_367_p1 = shl_ln167_1_fu_360_p3;

assign zext_ln167_2_fu_404_p1 = shl_ln167_mid1_fu_397_p3;

assign zext_ln167_3_fu_415_p1 = shl_ln167_1_mid1_fu_408_p3;

assign zext_ln167_fu_356_p1 = shl_ln_fu_349_p3;

assign zext_ln169_1_fu_433_p1 = select_ln165_1_fu_389_p3;

assign zext_ln169_2_fu_698_p1 = shl_ln169_1_fu_691_p3;

assign zext_ln169_3_fu_719_p1 = shl_ln169_3_fu_712_p3;

assign zext_ln169_4_fu_740_p1 = shl_ln169_5_fu_733_p3;

assign zext_ln169_fu_502_p1 = select_ln165_1_reg_1247;

assign zext_ln28_fu_816_p1 = mask_table_q0;

assign zext_ln515_fu_992_p1 = xs_exp_V_3_fu_978_p4;

assign zext_ln541_fu_790_p1 = index_fu_780_p4;

assign zext_ln818_fu_1081_p1 = tmp_fu_1073_p3;

always @ (posedge ap_clk) begin
    select_ln165_3_reg_1253[8:0] <= 9'b000000000;
end

endmodule //rgbToGrayscale_rgbToGrayscale_Pipeline_VITIS_LOOP_165_1_VITIS_LOOP_167_2
